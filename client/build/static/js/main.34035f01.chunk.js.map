{"version":3,"sources":["framework/IAction.ts","components/NavBar.tsx","state/appState.ts","reducer/appReducer.ts","framework/history.ts","components/Login.tsx","components/Register.tsx","components/SimpleLesson.tsx","components/ShowLesson.tsx","components/SearchBar.jsx","App.tsx","serviceWorker.ts","framework/CS.ts","index.tsx"],"names":["ActionType","nav","props","exact","to","initial","UI","counter","loggedIn","waitingForResponse","Login","errorMessage","BM","user","firstname","lastname","username","password","lessons","reducerFunctions","reducer","state","action","window","CS","log","type","newState","JSON","parse","stringify","reducerFunction","undefined","INIT","createBrowserHistory","login_error","user_logged_in","user_logged_out","getUIState","getBMState","className","onClick","this","handleLogout","onSubmit","handleSubmit","htmlFor","placeholder","onChange","handleUsernameChange","value","handlePasswordChange","event","target","update_user","clientAction","preventDefault","uiAction","server_called","axios","post","then","res","data","console","loggedinAction","history","push","get","loggedoutAction","Component","updateAction","user_created","Register","handleFirstnameChange","handleLastnameChange","lesson_updated","update_lesson","lessonToChange","filter","lesson","_id","lesson_name","lesson_duration","lesson_location","lesson_price","lesson_equip","lesson_language","lesson_amountPeople","lesson_eMailTeacher","lesson_aboutTeacher","delete_lesson","deleteAction","lessonsToKeep","SimpleLesson","handleSwitchToEditMode","bind","handleNameChange","handleDurationChange","handleLocationChange","handlePriceChange","handleEquipChange","handleLanguageChange","handleAmountPeopleChange","handleEmailTeacherChange","handleAboutTeacherChange","handleSave","handleRerenderTest","handleDelete","edit_mode","edit","name","id","setState","newLesson","put","render_test","React","PureComponent","create_lesson","ShowLessons","handleCreateLesson","toString","map","key","mongoose","Types","ObjectId","SearchBar","searchQuery","style","padding","margin","e","searchQuerye","onSearch","add_lessons_from_server","App","handleQuery","response","responseAction","catch","error","NavBar","path","component","Boolean","location","hostname","match","reduxMiddleware","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","ReduxThunk","store","message","getState","createStore","dispatch","initializeStore","ReactDOM","render","stateCounter","document","getElementById","getStore","subscribe","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6NAAYA,E,0FCcGC,EAXH,SAAEC,GACV,OACI,2BACI,0BACI,0BAAI,gBAAC,IAAD,CAASC,OAAO,EAAMC,GAAG,KAAzB,UACJ,0BAAI,gBAAC,IAAD,CAASA,GAAG,aAAZ,aACJ,0BAAI,gBAAC,IAAD,CAASA,GAAG,gBAAZ,gB,SDTRJ,K,cAAAA,E,0BAAAA,E,gCAAAA,E,kCAAAA,E,0BAAAA,E,4BAAAA,E,0BAAAA,E,8BAAAA,E,8BAAAA,E,8BAAAA,E,0BAAAA,E,8BAAAA,E,gCAAAA,E,mDAAAA,M,0BEiDCK,EAAiB,CAC7BC,GAAI,CACHC,QAAS,EACTC,UAAU,EACJC,oBAAoB,EACpBC,MAAO,CAACC,aAAa,KAE5BC,GAAI,CACGC,KAAK,CACDC,UAAU,GACVC,SAAS,GACTC,SAAS,GACTC,SAAS,IAEbC,QAAQ,KCzDHC,EAAuB,GAEvBC,EAAU,WAAuC,IAAtCC,EAAqC,uDAA7BhB,EAASiB,EAAoB,uCACzDC,OAAOC,GAAGC,IAAI,aAAeH,EAAOI,MACpC,IAAIC,EAAkBC,KAAKC,MAAMD,KAAKE,UAAUT,IAChDM,EAASrB,GAAGC,QAAUc,EAAMf,GAAGC,QAAU,EACzC,IAAMwB,EAAkBZ,EAAiBG,EAAOI,MACnD,QAAwBM,IAApBD,EAEG,OADNA,EAAgBJ,EAASL,GACZK,EAEX,OAAQL,EAAOI,MACX,KAAK1B,EAAWiC,KACZ,OAAON,EACX,QAEI,OADAJ,OAAOC,GAAGC,IAAI,oCACPE,I,QCpBJO,gBCaff,EAAiBnB,EAAWmC,aAAe,SAAUR,EAAkBL,GAGnE,OAFAK,EAASrB,GAAGG,oBAAqB,EACjCkB,EAASrB,GAAGI,MAAMC,aAAeW,EAAOX,aACjCgB,GAEXR,EAAiBnB,EAAWoC,gBAAkB,SAAUT,EAAkBL,GAKtE,OAJAK,EAASrB,GAAGG,oBAAqB,EACjCkB,EAASrB,GAAGI,MAAMC,aAAe,GACjCgB,EAASrB,GAAGE,UAAW,EACvBmB,EAASf,GAAGC,KAAOS,EAAOT,KACnBc,GAEXR,EAAiBnB,EAAWqC,iBAAmB,SAAUV,EAAkBL,GAKvE,OAJAK,EAASrB,GAAGG,oBAAqB,EACjCkB,EAASrB,GAAGI,MAAMC,aAAe,GACjCgB,EAASrB,GAAGE,UAAW,EACvBmB,EAASf,GAAGC,KAAO,CAACE,SAAS,GAAGD,UAAU,GAAGE,SAAS,GAAGC,SAAS,IAC3DU,G,IAGUjB,E,iLAEb,OAAIa,OAAOC,GAAGc,aAAa9B,SAEvB,6BACI,mDAAyBe,OAAOC,GAAGe,aAAa1B,KAAKG,UACrD,4BAAQwB,UAAU,kBAAkBC,QAASC,KAAKC,cAAlD,WAKJ,6BACI,0BAAMC,SAAUF,KAAKG,cACjB,2BAAOC,QAAQ,YAAf,aACA,2BAAOpB,KAAK,WAAWqB,YAAY,gBAAgBC,SAAUN,KAAKO,qBAAsBC,MAAO3B,OAAOC,GAAGe,aAAa1B,KAAKG,WAC3H,6BACA,2BAAO8B,QAAQ,YAAf,aACA,2BAAOpB,KAAK,WAAWqB,YAAY,WAAWC,SAAUN,KAAKS,qBAAsBD,MAAO3B,OAAOC,GAAGe,aAAa1B,KAAKI,WACtH,6BACA,2BAAOuB,UAAU,kBAAkBd,KAAK,SAASwB,MAAM,WAE3D,2BAAI3B,OAAOC,GAAGc,aAAa5B,MAAMC,iB,2CAMxByC,GACjB,IAAIvC,EAAOU,OAAOC,GAAGe,aAAa1B,KAClCA,EAAKG,SAAWoC,EAAMC,OAAOH,MAC7B,IAAM5B,EAAsB,CACxBI,KAAM1B,EAAWsD,YACjBzC,KAAMA,GAEVU,OAAOC,GAAG+B,aAAajC,K,2CAEN8B,GACjB,IAAIvC,EAAOU,OAAOC,GAAGe,aAAa1B,KAClCA,EAAKI,SAAWmC,EAAMC,OAAOH,MAC7B,IAAM5B,EAAsB,CACxBI,KAAM1B,EAAWsD,YACjBzC,KAAMA,GAEVU,OAAOC,GAAG+B,aAAajC,K,mCAGd8B,GACTA,EAAMI,iBACN,IAAMC,EAAoB,CACtB/B,KAAM1B,EAAW0D,eAErBnC,OAAOC,GAAG+B,aAAaE,GACvBE,IAAMC,KAAK,cAAerC,OAAOC,GAAGe,aAAa1B,MAC5CgD,MAAK,SAAAC,GACF,IAAMC,EAAOD,EAAIC,KAEjB,GADAC,QAAQvC,IAAIsC,GACRA,EAAKpD,aAAc,CACnB,IAAM8C,EAA0B,CAC5B/B,KAAM1B,EAAWmC,YACjBxB,aAAcoD,EAAKpD,cAEvBY,OAAOC,GAAG+B,aAAaE,OACpB,CACH,IAAMQ,EAA8B,CAChCvC,KAAM1B,EAAWoC,eACjBvB,KAAMkD,GAEVxC,OAAOC,GAAG+B,aAAaU,GACvBC,EAAQC,KAAK,sB,qCAMzB,IAAMV,EAAoB,CACtB/B,KAAM1B,EAAW0D,eAErBnC,OAAOC,GAAG+B,aAAaE,GACvBE,IAAMS,IAAI,gBAAgBP,MAAK,SAAAC,GAC3B,IAAMO,EAA2B,CAC7B3C,KAAM1B,EAAWqC,iBAErBd,OAAOC,GAAG+B,aAAac,U,GAlFAC,aCrBnCnD,EAAiBnB,EAAWsD,aAAe,SAAU3B,EAAkB4C,GAGnE,OAFAP,QAAQvC,IAAI8C,EAAa1D,MACzBc,EAASf,GAAGC,KAAO0D,EAAa1D,KACzBc,GAEXR,EAAiBnB,EAAWwE,cAAgB,SAAU7C,EAAkB4C,GAIpE,OAHAP,QAAQvC,IAAI8C,EAAa1D,MACzBc,EAASrB,GAAGG,oBAAqB,EACjCkB,EAASrB,GAAGE,UAAW,EAChBmB,G,IAEU8C,E,iLAEb,OACI,6BACI,0BAAM7B,SAAUF,KAAKG,cACjB,2BAAOC,QAAQ,aAAf,eACA,2BAAOpB,KAAK,OAAOqB,YAAY,YAAYC,SAAUN,KAAKgC,sBAAuBxB,MAAO3B,OAAOC,GAAGe,aAAa1B,KAAKC,YACpH,6BACA,2BAAOgC,QAAQ,YAAf,cACA,2BAAOpB,KAAK,OAAOqB,YAAY,WAAWC,SAAUN,KAAKiC,qBAAsBzB,MAAO3B,OAAOC,GAAGe,aAAa1B,KAAKE,WAClH,6BACA,2BAAO+B,QAAQ,YAAf,aACA,2BAAOpB,KAAK,WAAWqB,YAAY,gBAAgBC,SAAUN,KAAKO,qBAAsBC,MAAO3B,OAAOC,GAAGe,aAAa1B,KAAKG,WAC3H,6BACA,2BAAO8B,QAAQ,YAAf,aACA,2BAAOpB,KAAK,WAAWqB,YAAY,WAAWC,SAAUN,KAAKS,qBAAsBD,MAAO3B,OAAOC,GAAGe,aAAa1B,KAAKI,WACtH,6BACA,2BAAOS,KAAK,SAASwB,MAAM,6B,4CAMrBE,GAClB,IAAIvC,EAAOU,OAAOC,GAAGe,aAAa1B,KAClCA,EAAKC,UAAYsC,EAAMC,OAAOH,MAC9B,IAAM5B,EAAsB,CACxBI,KAAM1B,EAAWsD,YACjBzC,KAAMA,GAEVU,OAAOC,GAAG+B,aAAajC,K,2CAEN8B,GACjB,IAAIvC,EAAOU,OAAOC,GAAGe,aAAa1B,KAClCA,EAAKE,SAAWqC,EAAMC,OAAOH,MAC7B,IAAM5B,EAAsB,CACxBI,KAAM1B,EAAWsD,YACjBzC,KAAMA,GAEVU,OAAOC,GAAG+B,aAAajC,K,2CAEN8B,GACjB,IAAIvC,EAAOU,OAAOC,GAAGe,aAAa1B,KAClCA,EAAKG,SAAWoC,EAAMC,OAAOH,MAC7B,IAAM5B,EAAsB,CACxBI,KAAM1B,EAAWsD,YACjBzC,KAAMA,GAEVU,OAAOC,GAAG+B,aAAajC,K,2CAEN8B,GACjB,IAAIvC,EAAOU,OAAOC,GAAGe,aAAa1B,KAClCA,EAAKI,SAAWmC,EAAMC,OAAOH,MAC7B,IAAM5B,EAAsB,CACxBI,KAAM1B,EAAWsD,YACjBzC,KAAMA,GAEVU,OAAOC,GAAG+B,aAAajC,K,mCAEd8B,GACTA,EAAMI,iBACN,IAAMC,EAAoB,CACtB/B,KAAM1B,EAAW0D,eAErBnC,OAAOC,GAAG+B,aAAaE,GACvBE,IAAMC,KAAK,eAAgBrC,OAAOC,GAAGe,aAAa1B,MAC7CgD,MAAK,SAAAC,GACF,IAAML,EAAoB,CACtB/B,KAAM1B,EAAWwE,cAErBN,EAAQC,KAAK,KACb5C,OAAOC,GAAG+B,aAAaE,GAEvBO,QAAQvC,IAAIqC,EAAIC,a,GAzEMO,a,OCFtCnD,EAAiBnB,EAAW4E,gBAAkB,SAAUjD,EAAkB4C,GACtE5C,EAASrB,GAAGG,oBAAmB,GAEnCU,EAAiBnB,EAAW6E,eAAiB,SAAUlD,EAAkB4C,GACrE,IAAIO,EAAgCnD,EAASf,GAAGM,QAAQ6D,QAAO,SAAAC,GAAM,OAAIA,EAAOC,MAAQV,EAAaS,OAAOC,OAW5G,OAVAjB,QAAQvC,IAAIqD,GACZA,EAAe,GAAGI,YAAcX,EAAaS,OAAOE,YACpDJ,EAAe,GAAGK,gBAAkBZ,EAAaS,OAAOG,gBACxDL,EAAe,GAAGM,gBAAkBb,EAAaS,OAAOI,gBACxDN,EAAe,GAAGO,aAAed,EAAaS,OAAOK,aACrDP,EAAe,GAAGQ,aAAef,EAAaS,OAAOM,aACrDR,EAAe,GAAGS,gBAAkBhB,EAAaS,OAAOO,gBACxDT,EAAe,GAAGU,oBAAsBjB,EAAaS,OAAOQ,oBAC5DV,EAAe,GAAGW,oBAAsBlB,EAAaS,OAAOS,oBAC5DX,EAAe,GAAGY,oBAAsBnB,EAAaS,OAAOU,oBACrDZ,GAEX3D,EAAiBnB,EAAW2F,eAAiB,SAAUhE,EAAkBiE,GACrE,IAAIC,EAA+BlE,EAASf,GAAGM,QAAQ6D,QAAO,SAAAC,GAAM,OAAIA,EAAOC,MAAQW,EAAaZ,OAAOC,OAE3G,OADAtD,EAASf,GAAGM,QAAU2E,EACflE,G,IAIUmE,E,YAEjB,WAAY5F,GAAgB,IAAD,8BACvB,4CAAMA,KAED6F,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAC9B,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,qBAAuB,EAAKA,qBAAqBF,KAA1B,gBAC5B,EAAKG,qBAAuB,EAAKA,qBAAqBH,KAA1B,gBAC5B,EAAKI,kBAAoB,EAAKA,kBAAkBJ,KAAvB,gBACzB,EAAKK,kBAAoB,EAAKA,kBAAkBL,KAAvB,gBACzB,EAAKM,qBAAuB,EAAKA,qBAAqBN,KAA1B,gBAC5B,EAAKO,yBAA2B,EAAKA,yBAAyBP,KAA9B,gBAChC,EAAKQ,yBAA2B,EAAKA,yBAAyBR,KAA9B,gBAChC,EAAKS,yBAA2B,EAAKA,yBAAyBT,KAA9B,gBAEhC,EAAKU,WAAa,EAAKA,WAAWV,KAAhB,gBAClB,EAAKW,mBAAqB,EAAKA,mBAAmBX,KAAxB,gBAC1B,EAAKY,aAAe,EAAKA,aAAaZ,KAAlB,gBAEpB,EAAK3E,MAAQ,CACTwF,UAAW3G,EAAM4G,MAnBE,E,sEA0BvB,OAAIpE,KAAKrB,MAAMwF,UAEP,4BACI,4BAAI,2BAAOnF,KAAK,OAAOqF,KAAK,OAAO7D,MAAOR,KAAKxC,MAAM8E,OAAOE,YAAalC,SAAUN,KAAKuD,oBACxF,4BAAI,2BAAOvE,KAAK,OAAOqF,KAAK,WAAW7D,MAAOR,KAAKxC,MAAM8E,OAAOG,gBAAiBnC,SAAUN,KAAKwD,wBAChG,4BAAI,2BAAOxE,KAAK,OAAOqF,KAAK,WAAW7D,MAAOR,KAAKxC,MAAM8E,OAAOI,gBAAiBpC,SAAUN,KAAKyD,wBAChG,4BAAI,2BAAOzE,KAAK,OAAOqF,KAAK,OAAO7D,MAAOR,KAAKxC,MAAM8E,OAAOK,aAAcrC,SAAUN,KAAK0D,qBACzF,4BAAI,2BAAO1E,KAAK,OAAOqF,KAAK,OAAO7D,MAAOR,KAAKxC,MAAM8E,OAAOM,aAActC,SAAUN,KAAK2D,qBACzF,4BAAI,2BAAO3E,KAAK,OAAOqF,KAAK,OAAO7D,MAAOR,KAAKxC,MAAM8E,OAAOO,gBAAiBvC,SAAUN,KAAK4D,wBAC5F,4BAAI,2BAAO5E,KAAK,OAAOqF,KAAK,OAAO7D,MAAOR,KAAKxC,MAAM8E,OAAOQ,oBAAqBxC,SAAUN,KAAK6D,4BAChG,4BAAI,2BAAO7E,KAAK,OAAOqF,KAAK,OAAO7D,MAAOR,KAAKxC,MAAM8E,OAAOS,oBAAqBzC,SAAUN,KAAK8D,4BAChG,4BAAI,2BAAO9E,KAAK,OAAOqF,KAAK,OAAO7D,MAAOR,KAAKxC,MAAM8E,OAAOU,oBAAqB1C,SAAUN,KAAK+D,4BAEhG,4BACI,4BAAQhE,QAASC,KAAKgE,WAAYM,GAAItE,KAAKxC,MAAM8E,OAAOC,KAAxD,QACA,4BAAQxC,QAASC,KAAKiE,oBAAtB,4BAMR,4BACI,4BAAKjE,KAAKxC,MAAM8E,OAAOE,aACvB,4BAAKxC,KAAKxC,MAAM8E,OAAOG,gBAAvB,YACA,4BAAKzC,KAAKxC,MAAM8E,OAAOI,gBAAvB,KACA,4BAAK1C,KAAKxC,MAAM8E,OAAOK,aAAvB,WACA,4BAAK3C,KAAKxC,MAAM8E,OAAOM,aAAvB,KACA,4BAAK5C,KAAKxC,MAAM8E,OAAOO,gBAAvB,KACA,4BAAK7C,KAAKxC,MAAM8E,OAAOQ,oBAAvB,KACA,4BAAK9C,KAAKxC,MAAM8E,OAAOS,oBAAvB,KACA,4BAAK/C,KAAKxC,MAAM8E,OAAOU,oBAAvB,KAEA,4BACI,4BAAQjD,QAASC,KAAKqD,wBAAtB,QACA,4BAAQtD,QAASC,KAAKkE,aAAcI,GAAItE,KAAKxC,MAAM8E,OAAOC,KAA1D,mBACA,4BAAQxC,QAASC,KAAKiE,oBAAtB,0BAAmEpF,OAAOC,GAAGc,aAAa/B,a,+CAM1GmC,KAAKuE,SAAS,CAAEJ,WAAW,M,uCAEdzD,GACb,IAAM8D,EAAYxE,KAAKxC,MAAM8E,OAC7BkC,EAAUhC,YAAc9B,EAAMC,OAAOH,MACrC,IAAM5B,EAAwB,CAC1BI,KAAM1B,EAAW6E,cACjBG,OAAQkC,GAEZ3F,OAAOC,GAAG+B,aAAajC,K,2CAEN8B,GACjB,IAAM8D,EAAYxE,KAAKxC,MAAM8E,OAC7BkC,EAAU/B,gBAAkB/B,EAAMC,OAAOH,MACzC,IAAM5B,EAAwB,CAC1BI,KAAM1B,EAAW6E,cACjBG,OAAQkC,GAEZ3F,OAAOC,GAAG+B,aAAajC,K,2CAEN8B,GACjB,IAAM8D,EAAYxE,KAAKxC,MAAM8E,OAC7BkC,EAAU9B,gBAAkBhC,EAAMC,OAAOH,MACzC,IAAM5B,EAAwB,CAC1BI,KAAM1B,EAAW6E,cACjBG,OAAQkC,GAEZ3F,OAAOC,GAAG+B,aAAajC,K,wCAET8B,GACd,IAAM8D,EAAYxE,KAAKxC,MAAM8E,OAC7BkC,EAAU7B,aAAejC,EAAMC,OAAOH,MACtC,IAAM5B,EAAwB,CAC1BI,KAAM1B,EAAW6E,cACjBG,OAAQkC,GAEZ3F,OAAOC,GAAG+B,aAAajC,K,wCAET8B,GACd,IAAM8D,EAAYxE,KAAKxC,MAAM8E,OAC7BkC,EAAU5B,aAAelC,EAAMC,OAAOH,MACtC,IAAM5B,EAAwB,CAC1BI,KAAM1B,EAAW6E,cACjBG,OAAQkC,GAEZ3F,OAAOC,GAAG+B,aAAajC,K,2CAEN8B,GACjB,IAAM8D,EAAYxE,KAAKxC,MAAM8E,OAC7BkC,EAAU3B,gBAAkBnC,EAAMC,OAAOH,MACzC,IAAM5B,EAAwB,CAC1BI,KAAM1B,EAAW6E,cACjBG,OAAQkC,GAGZ3F,OAAOC,GAAG+B,aAAajC,K,+CAEF8B,GACrB,IAAM8D,EAAYxE,KAAKxC,MAAM8E,OAC7BkC,EAAU1B,oBAAsBpC,EAAMC,OAAOH,MAC7C,IAAM5B,EAAwB,CAC1BI,KAAM1B,EAAW6E,cACjBG,OAAQkC,GAEZ3F,OAAOC,GAAG+B,aAAajC,K,+CAEF8B,GACrB,IAAM8D,EAAYxE,KAAKxC,MAAM8E,OAC7BkC,EAAUzB,oBAAsBrC,EAAMC,OAAOH,MAC7C,IAAM5B,EAAwB,CAC1BI,KAAM1B,EAAW6E,cACjBG,OAAQkC,GAEZ3F,OAAOC,GAAG+B,aAAajC,K,+CAEF8B,GACrB,IAAM8D,EAAYxE,KAAKxC,MAAM8E,OAC7BkC,EAAUxB,oBAAsBtC,EAAMC,OAAOH,MAC7C,IAAM5B,EAAwB,CAC1BI,KAAM1B,EAAW6E,cACjBG,OAAQkC,GAEZ3F,OAAOC,GAAG+B,aAAajC,K,iCAEhB8B,GACPV,KAAKuE,SAAS,CAAEJ,WAAW,IAC3B,IAAMpD,EAAoB,CACtB/B,KAAM1B,EAAW0D,eAEnBnC,OAAOC,GAAG+B,aAAaE,GACzBE,IAAMwD,IAAI,mBAAqBzE,KAAKxC,MAAM8E,OAAOC,IAAKvC,KAAKxC,MAAM8E,QAChEnB,MAAK,SAAAC,GACFE,QAAQvC,IAAIqC,GACZ,IAAML,EAAoB,CACtB/B,KAAM1B,EAAW4E,gBAEnBrD,OAAOC,GAAG+B,aAAaE,Q,qCAGjB,IAAD,OACLA,EAAoB,CACtB/B,KAAM1B,EAAW0D,eAEnBnC,OAAOC,GAAG+B,aAAaE,GACvBE,IAAMC,KAAK,mBAAqBlB,KAAKxC,MAAM8E,OAAOC,KACjDpB,MAAK,SAAAC,GACJ,IAAMxC,EAAwB,CAC1BI,KAAM1B,EAAW2F,cACjBX,OAAQ,EAAK9E,MAAM8E,QAEvBzD,OAAOC,GAAG+B,aAAajC,Q,yCAGZ8B,GACf,IAAM9B,EAAkB,CACpBI,KAAM1B,EAAWoH,aAErB7F,OAAOC,GAAG+B,aAAajC,O,GA1LW+F,IAAMC,e,kBC9BhDnG,EAAiBnB,EAAWuH,eAAiB,SAAU5F,EAAkBL,GAGvE,OAFAK,EAASf,GAAGM,QAAQiD,KAAK7C,EAAO0D,QAChCrD,EAASrB,GAAGG,oBAAmB,EACxBkB,G,IAGY6F,E,YACjB,WAAYtH,GAAa,IAAD,6BACpB8D,QAAQvC,IAAI,0CACZ,4CAAMvB,KACDuH,mBAAqB,EAAKA,mBAAmBzB,KAAxB,gBAHN,E,sEAMpB,OACI,6BACF,+BAAKzE,OAAOC,GAAGc,aAAa7B,mBAAmBiH,WAAYnG,OAAOC,GAAGc,aAAa/B,SAClF,oEACA,2EACE,4BAAQkC,QAASC,KAAK+E,oBAAtB,kBAEF,+BACE,+BACE,4BAAI,2CAAoB,wCAAiB,wCAAiB,qCAAc,qCAAc,wCAAiB,gDAAyB,qCAAc,kDAC7IlG,OAAOC,GAAGe,aAAarB,QAAQyG,KAAI,SAAA3C,GAAM,OAAI,kBAAC,EAAD,CAAc4C,IAAK5C,EAAOC,IAAKD,OAAQA,EAAQ8B,MAAM,Y,2CAOzG9C,QAAQvC,IAAI,8BACZ,IAAMgC,EAAoB,CACxB/B,KAAM1B,EAAW0D,eAEnBnC,OAAOC,GAAG+B,aAAaE,GACvB,IAAMyD,EAAyB,CAC7BjC,IAAK4C,IAASC,MAAMC,WAAWL,WAC/BxC,YAAa,SACbC,gBAAgB,GAChBC,gBAAiB,aACjBC,aAAc,GACdC,aAAc,qCACdC,gBAAgB,UAChBC,oBAAqB,IACrBC,oBAAqB,gCACrBC,oBAAqB,qCAEjBpE,EAAwB,CAC5BI,KAAM1B,EAAWuH,cACjBvC,OAAQkC,GAEVvD,IAAMC,KAAK,eAAgBsD,GAC1BrD,MAAK,SAAAC,GACJvC,OAAOC,GAAG+B,aAAajC,GACvB0C,QAAQvC,IAAIqC,EAAIC,a,GAhDeO,aCkB1B0D,G,kNAhCb3G,MAAQ,CACN4G,YAAa,I,wEAEL,IAAD,OACP,OACE,yBAAKzF,UAAU,mBACb0F,MAAO,CACLC,QAAS,OACTC,OAAQ,SAGV,yBAAK5F,UAAU,WAEb,2BACEA,UAAU,QACVd,KAAK,OACLqF,KAAK,QACL7D,MAAOR,KAAKxC,MAAMgD,MAClBF,SAAU,SAAAqF,GAAC,OAAI,EAAKpB,SAAS,CAACqB,aAAcD,EAAEhF,OAAOH,SACrDH,YAAY,uBAGhB,yBAAKP,UAAU,WACb,uBAAGA,UAAU,iBAAiBC,QAAS,kBAAI,EAAKvC,MAAMqI,SAAS,EAAKlH,MAAM4G,eAA1E,gB,GAxBc3D,c,QCcxBnD,EAAiBnB,EAAW0D,eAAiB,SAAU/B,EAAkBL,GAEvE,OADAK,EAASrB,GAAGG,oBAAqB,EAC1BkB,GAETR,EAAiBnB,EAAWwI,yBAA2B,SAAU7G,EAAkBL,GAGjF,OAFAK,EAASrB,GAAGG,oBAAqB,EACjCkB,EAASf,GAAGM,QAAUI,EAAOJ,QACtBS,G,IAEY8G,E,2MAiBnBC,YAAc,SAACT,GACbtE,IAAMC,KAAK,kBAAmBqE,GAAapE,MAAK,SAAA8E,GAC9C3E,QAAQvC,IAAIkH,EAAS5E,U,mFAjBvB,IAAMN,EAAoB,CACxB/B,KAAM1B,EAAW0D,eAEnBnC,OAAOC,GAAG+B,aAAaE,GACvBE,IAAMS,IAAI,iBAAiBP,MAAK,SAAA8E,GAC9B3E,QAAQvC,IAAI,0DACZuC,QAAQvC,IAAIkH,EAAS5E,MACrB,IAAM6E,EAAuC,CAC3ClH,KAAM1B,EAAWwI,wBACjBtH,QAASyH,EAAS5E,MAEpBxC,OAAOC,GAAG+B,aAAaqF,MACtBC,OAAM,SAAUC,GAAS9E,QAAQvC,IAAIqH,Q,+BAWxC,OADAvH,OAAOC,GAAGC,IAAI,uBAEZ,yBAAKe,UAAU,mBAAf,IACE,kBAACuG,EAAD,MACA,kBAAC,EAAD,CACAR,SAAU7F,KAAKgG,cAEf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOM,KAAK,eAAeC,UAAWzB,IACtC,kBAAC,IAAD,CAAOwB,KAAK,YAAYC,UAAWxE,IACnC,kBAAC,IAAD,CAAOuE,KAAK,IAAIC,UAAWvI,U,GAlCJ2G,IAAMC,eCnBnB4B,QACW,cAA7B3H,OAAO4H,SAASC,UAEe,UAA7B7H,OAAO4H,SAASC,UAEhB7H,OAAO4H,SAASC,SAASC,MACvB,2D,ICPFC,E,gBAEAA,EADA/H,OAAOgI,6BACWC,YACdC,YAAgBC,KAChBnI,OAAOgI,8BAAgChI,OAAOgI,gCAE3BE,YAAgBC,KAGpC,IAAMlI,EAAb,iDACYmI,WADZ,kDAEeC,GACP5F,QAAQvC,IAAImI,KAHpB,iCAMQ,OAAOlH,KAAKiH,QANpB,iCASQ,OAAOjH,KAAKiH,MAAME,aAT1B,mCAYQ,OAAOnH,KAAKmH,WAAWvJ,KAZ/B,mCAeQ,OAAOoC,KAAKmH,WAAWjJ,KAf/B,wCAkBQ8B,KAAKiH,MAAQG,YACT1I,EACAkI,KApBZ,mCAwBuBhI,GACnBoB,KAAKiH,MAAMI,SAASzI,KAzBxB,4CA6BQ,MAAO,4BA7Bf,KCNAC,OAAOC,GAAK,IAAIA,EAEhBD,OAAOC,GAAGwI,kBAGVC,IAASC,OACP,kBAAC,IAAD,CAAQhG,QAASA,GACjB,kBAAC,EAAD,CAAKiG,aAAc5I,OAAOC,GAAGc,aAAa/B,WAE1C6J,SAASC,eAAe,SAM1B9I,OAAOC,GAAG8I,WAAWC,WAAU,WAC7BhJ,OAAOC,GAAGC,IAAI,kEACdwI,IAASC,OAAO,kBAAC,IAAD,CAAQhG,QAASA,GACjB,kBAAC,EAAD,CAAKiG,aAAc5I,OAAOC,GAAGc,aAAa/B,WAC/B6J,SAASC,eAAe,SACnD9I,OAAOC,GAAGC,IAAI,oEFuGV,kBAAmB+I,WACrBA,UAAUC,cAAcC,MAAM7G,MAAK,SAAA8G,GACjCA,EAAaC,kB","file":"static/js/main.34035f01.chunk.js","sourcesContent":["export enum ActionType {\r\n    INIT = \"@@INIT\",\r\n    login_error = \"login_error\",\r\n    user_logged_in = \"user_logged_in\",\r\n    user_logged_out = \"user_logged_out\",\r\n    update_user = \"update_user\",\r\n    user_created = \"user_created\",\r\n    user_exists = \"user_exists\",\r\n    create_lesson = \"create_lesson\",\r\n    update_lesson = \"update_lesson\",\r\n    delete_lesson = \"delete_lesson\",\r\n    render_test = \"render_test\",\r\n    server_called = \"server_called\",\r\n    lesson_updated = \"lesson_updated\",\r\n    add_lessons_from_server = \"add_lessons_from_server\"\r\n    \r\n}\r\nexport interface IAction {\r\n    type: ActionType;\r\n}\r\n","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst nav = ( props: any ) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li><NavLink exact={true} to=\"/\">Login</NavLink></li>\r\n                <li><NavLink to=\"/register\">Register</NavLink></li>\r\n                <li><NavLink to=\"/showlessons\">Lessons</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\nexport default nav;","export interface IUser {\r\n    firstname:string;\r\n    lastname:string;\r\n    username:string;\r\n    password:string;\r\n}\r\n\r\nexport interface ILogin{\r\n    errorMessage:string;\r\n}\r\n\r\nexport interface IUI{\r\n    counter: number;\r\n    loggedIn: boolean;\r\n    waitingForResponse:boolean;\r\n}\r\n\r\nexport interface IUI {\r\n    counter: number;\r\n    loggedIn: boolean;\r\n    waitingForResponse: boolean;\r\n    Login: ILogin;\r\n}\r\n\r\nexport interface ILessonData {\r\n    _id: string;\r\n    lesson_name: string;\r\n    lesson_duration:number;\r\n    lesson_location: string;\r\n    lesson_price: number;\r\n    lesson_equip: string;\r\n    lesson_language:string;\r\n    lesson_amountPeople: string;\r\n    lesson_eMailTeacher: string;\r\n    lesson_aboutTeacher: string;\r\n\r\n  }\r\n\r\nexport interface IBM{\r\n    user:IUser;\r\n    lessons:ILessonData[]\r\n}\r\n\r\nexport interface IState{\r\n    UI:IUI;\r\n    BM:IBM;\r\n}\r\n\r\n// initial state \r\nexport const initial:IState = {\r\n\tUI: {\r\n\t\tcounter: 0,\r\n\t\tloggedIn: false,\r\n        waitingForResponse: false,\r\n        Login: {errorMessage:\"\"}\r\n    },\r\n\tBM: {\r\n        user:{\r\n            firstname:\"\",\r\n            lastname:\"\",\r\n            username:\"\",\r\n            password:\"\"\r\n        },\r\n        lessons:[]\r\n\t}\r\n};\r\n","import { initial, IState } from '../state/appState'\r\nimport { IWindow } from '../framework/IWindow'\r\nimport { IAction, ActionType } from '../framework/IAction'\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport const reducerFunctions:any = {};\r\n\r\nexport const reducer = (state = initial, action: IAction) => {\r\n    window.CS.log(\"2. ACTION:\" + action.type);\r\n    let newState:IState = JSON.parse(JSON.stringify(state)) as IState;\r\n    newState.UI.counter = state.UI.counter + 1;\r\n    const reducerFunction = reducerFunctions[action.type];\r\n\tif (reducerFunction !== undefined) {\r\n\t\treducerFunction(newState,action);\r\n        return newState;\r\n    }\r\n    switch (action.type) {\r\n        case ActionType.INIT:\r\n            return newState;\r\n        default:\r\n            window.CS.log(\"1. Error!!!!! no reducer defined\");\r\n            return newState;\r\n    }\r\n}\r\n\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { Component } from 'react'\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { IUserAction } from './Register';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport interface IErrorMessage extends IAction {\r\n    errorMessage: string;\r\n}\r\n\r\nreducerFunctions[ActionType.login_error] = function (newState: IState, action: IErrorMessage) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = action.errorMessage;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_in] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = true;\r\n    newState.BM.user = action.user;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_out] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = false;\r\n    newState.BM.user = {lastname:\"\",firstname:\"\",username:\"\",password:\"\"};\r\n    return newState\r\n}\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        if (window.CS.getUIState().loggedIn)\r\n        return (\r\n            <div>\r\n                <p>You are logged in as {window.CS.getBMState().user.username}</p>\r\n                <button className=\"btn btn-primary\" onClick={this.handleLogout}>Logout</button>\r\n            </div>\r\n        )\r\n    else\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input type=\"username\" placeholder=\"Your username\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} />\r\n                    <br />\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input type=\"password\" placeholder=\"********\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} />\r\n                    <br />\r\n                    <input className=\"btn btn-primary\" type=\"submit\" value=\"Login\" />\r\n                </form>\r\n                <p>{window.CS.getUIState().Login.errorMessage}</p>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/login', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const data = res.data;\r\n                console.log(data);\r\n                if (data.errorMessage) {\r\n                    const uiAction: IErrorMessage = {\r\n                        type: ActionType.login_error,\r\n                        errorMessage: data.errorMessage\r\n                    }\r\n                    window.CS.clientAction(uiAction);\r\n                } else {\r\n                    const loggedinAction: IUserAction = {\r\n                        type: ActionType.user_logged_in,\r\n                        user: data as IUser\r\n                    }\r\n                    window.CS.clientAction(loggedinAction);\r\n                    history.push(\"/showlessons\");\r\n                }\r\n            });\r\n    }\r\n\r\n    handleLogout() {\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.get('/auth/logout').then(res => {\r\n            const loggedoutAction: IAction = {\r\n                type: ActionType.user_logged_out\r\n            }\r\n            window.CS.clientAction(loggedoutAction);\r\n        }\r\n        );\r\n    }\r\n\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport interface IUserAction extends IAction {\r\n    user: IUser\r\n}\r\n\r\nreducerFunctions[ActionType.update_user] = function (newState: IState, updateAction: IUserAction) {\r\n    console.log(updateAction.user);\r\n    newState.BM.user = updateAction.user;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_created] = function (newState: IState, updateAction: IUserAction) {\r\n    console.log(updateAction.user);\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.loggedIn = true ;\r\n    return newState\r\n}\r\nexport default class Register extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"firstname\">First name:</label>\r\n                    <input type=\"text\" placeholder=\"firstname\" onChange={this.handleFirstnameChange} value={window.CS.getBMState().user.firstname} />\r\n                    <br />\r\n                    <label htmlFor=\"lastname\">Last name:</label>\r\n                    <input type=\"text\" placeholder=\"lastname\" onChange={this.handleLastnameChange} value={window.CS.getBMState().user.lastname} />\r\n                    <br />\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input type=\"username\" placeholder=\"Your username\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} />\r\n                    <br />\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input type=\"password\" placeholder=\"********\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} />\r\n                    <br />\r\n                    <input type=\"submit\" value=\"Register as new User\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleFirstnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.firstname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleLastnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.lastname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/signup', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const uiAction: IAction = {\r\n                    type: ActionType.user_created\r\n                }\r\n                history.push('/');\r\n                window.CS.clientAction(uiAction);\r\n\r\n                console.log(res.data)\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { ILessonAction } from './ShowLesson';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { ILessonData, IState } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\ndeclare let window: IWindow;\r\n\r\n//this file defines the React component that renders a single lesson to the browser window\r\n//it also contains the logic to change lesson properties and save the changes to the database\r\n//most of the used React framework features are already explained in the comments of App.js\r\n//so this code hopefully mostly explains itself ...\r\n\r\ninterface IProps {\r\n    edit: boolean;\r\n    lesson: ILessonData;\r\n}\r\n\r\ninterface IJSXState {\r\n    edit_mode: boolean;\r\n}\r\n\r\nreducerFunctions[ActionType.lesson_updated] = function (newState: IState, updateAction: ILessonAction) {\r\n    newState.UI.waitingForResponse=false;\r\n}\r\nreducerFunctions[ActionType.update_lesson] = function (newState: IState, updateAction: ILessonAction) {\r\n    let lessonToChange: ILessonData[] = newState.BM.lessons.filter(lesson => lesson._id === updateAction.lesson._id)\r\n    console.log(lessonToChange);\r\n    lessonToChange[0].lesson_name = updateAction.lesson.lesson_name;\r\n    lessonToChange[0].lesson_duration = updateAction.lesson.lesson_duration;\r\n    lessonToChange[0].lesson_location = updateAction.lesson.lesson_location;\r\n    lessonToChange[0].lesson_price = updateAction.lesson.lesson_price;\r\n    lessonToChange[0].lesson_equip = updateAction.lesson.lesson_equip;\r\n    lessonToChange[0].lesson_language = updateAction.lesson.lesson_language;\r\n    lessonToChange[0].lesson_amountPeople = updateAction.lesson.lesson_amountPeople;\r\n    lessonToChange[0].lesson_eMailTeacher = updateAction.lesson.lesson_eMailTeacher;\r\n    lessonToChange[0].lesson_aboutTeacher = updateAction.lesson.lesson_aboutTeacher;\r\n    return lessonToChange;\r\n}\r\nreducerFunctions[ActionType.delete_lesson] = function (newState: IState, deleteAction: ILessonAction) {\r\n    let lessonsToKeep: ILessonData[] = newState.BM.lessons.filter(lesson => lesson._id !== deleteAction.lesson._id)\r\n    newState.BM.lessons = lessonsToKeep;\r\n    return newState;\r\n}\r\n\r\n\r\nexport default class SimpleLesson extends React.PureComponent<IProps, IJSXState> {\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.handleSwitchToEditMode = this.handleSwitchToEditMode.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleDurationChange = this.handleDurationChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handlePriceChange = this.handlePriceChange.bind(this);\r\n        this.handleEquipChange = this.handleEquipChange.bind(this);\r\n        this.handleLanguageChange = this.handleLanguageChange.bind(this);\r\n        this.handleAmountPeopleChange = this.handleAmountPeopleChange.bind(this);\r\n        this.handleEmailTeacherChange = this.handleEmailTeacherChange.bind(this);\r\n        this.handleAboutTeacherChange = this.handleAboutTeacherChange.bind(this);\r\n\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.handleRerenderTest = this.handleRerenderTest.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n\r\n        this.state = {\r\n            edit_mode: props.edit,\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        //if the component is in edit mode, it will render different than if it just shows the data\r\n        if (this.state.edit_mode)\r\n            return (\r\n                <tr>\r\n                    <td><input type=\"text\" name=\"name\" value={this.props.lesson.lesson_name} onChange={this.handleNameChange} /></td>\r\n                    <td><input type=\"text\" name=\"duration\" value={this.props.lesson.lesson_duration} onChange={this.handleDurationChange} /></td>\r\n                    <td><input type=\"text\" name=\"location\" value={this.props.lesson.lesson_location} onChange={this.handleLocationChange} /></td>\r\n                    <td><input type=\"text\" name=\"name\" value={this.props.lesson.lesson_price} onChange={this.handlePriceChange} /></td>\r\n                    <td><input type=\"text\" name=\"name\" value={this.props.lesson.lesson_equip} onChange={this.handleEquipChange} /></td>\r\n                    <td><input type=\"text\" name=\"name\" value={this.props.lesson.lesson_language} onChange={this.handleLanguageChange} /></td>\r\n                    <td><input type=\"text\" name=\"name\" value={this.props.lesson.lesson_amountPeople} onChange={this.handleAmountPeopleChange} /></td>\r\n                    <td><input type=\"text\" name=\"name\" value={this.props.lesson.lesson_eMailTeacher} onChange={this.handleEmailTeacherChange} /></td>\r\n                    <td><input type=\"text\" name=\"name\" value={this.props.lesson.lesson_aboutTeacher} onChange={this.handleAboutTeacherChange} /></td>\r\n\r\n                    <td>\r\n                        <button onClick={this.handleSave} id={this.props.lesson._id}>save</button>\r\n                        <button onClick={this.handleRerenderTest} >increase State Counter</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        else\r\n            return (\r\n                <tr>\r\n                    <td>{this.props.lesson.lesson_name}</td>\r\n                    <td>{this.props.lesson.lesson_duration} Minuten</td>\r\n                    <td>{this.props.lesson.lesson_location} </td>\r\n                    <td>{this.props.lesson.lesson_price} €</td>\r\n                    <td>{this.props.lesson.lesson_equip} </td>\r\n                    <td>{this.props.lesson.lesson_language} </td>\r\n                    <td>{this.props.lesson.lesson_amountPeople} </td>\r\n                    <td>{this.props.lesson.lesson_eMailTeacher} </td>\r\n                    <td>{this.props.lesson.lesson_aboutTeacher} </td>\r\n\r\n                    <td>\r\n                        <button onClick={this.handleSwitchToEditMode}>edit</button>\r\n                        <button onClick={this.handleDelete} id={this.props.lesson._id}>sell or dispose</button>\r\n                        <button onClick={this.handleRerenderTest} >increase State Counter {window.CS.getUIState().counter}</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n    }\r\n    handleSwitchToEditMode() {\r\n        this.setState({ edit_mode: true });\r\n    }\r\n    handleNameChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_name = event.target.value\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleDurationChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_duration = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleLocationChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_location = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePriceChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_price = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleEquipChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_equip = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleLanguageChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_language = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n            \r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleAmountPeopleChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_amountPeople = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleEmailTeacherChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_eMailTeacher = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleAboutTeacherChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_aboutTeacher = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleSave(event: any) {\r\n        this.setState({ edit_mode: false });\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n          }\r\n          window.CS.clientAction(uiAction);\r\n        axios.put('/lessons/update/' + this.props.lesson._id, this.props.lesson)\r\n        .then(res => {\r\n            console.log(res)\r\n            const uiAction: IAction = {\r\n                type: ActionType.lesson_updated\r\n              }\r\n              window.CS.clientAction(uiAction);\r\n        });\r\n    }\r\n    handleDelete() {\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n          }\r\n          window.CS.clientAction(uiAction);\r\n          axios.post('/lessons/delete/' + this.props.lesson._id)\r\n          .then(res => {\r\n            const action: ILessonAction = {\r\n                type: ActionType.delete_lesson,\r\n                lesson: this.props.lesson\r\n            }\r\n            window.CS.clientAction(action)\r\n          });\r\n    }\r\n    handleRerenderTest(event: any) {\r\n        const action: IAction = {\r\n            type: ActionType.render_test,\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nimport SimpleLesson from './SimpleLesson'\r\nimport mongoose from 'mongoose';\r\nimport { IAction, ActionType } from '../framework/IAction';\r\nimport {ILessonData,IState} from '../state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\n\r\nimport { IWindow } from '../framework/IWindow'\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps{};\r\ninterface IJSXState { };\r\nexport interface ILessonAction extends IAction {\r\n  lesson: ILessonData\r\n}\r\nreducerFunctions[ActionType.create_lesson] = function (newState: IState, action: ILessonAction) {\r\n  newState.BM.lessons.push(action.lesson);\r\n  newState.UI.waitingForResponse=false;\r\n  return newState;\r\n}\r\n\r\nexport default class ShowLessons extends Component<IProps, IJSXState> {\r\n    constructor(props: any) {\r\n        console.log(\"new App component will be initialized\");\r\n        super(props);\r\n        this.handleCreateLesson = this.handleCreateLesson.bind(this);\r\n      }\r\n    render() {\r\n        return (\r\n            <div>\r\n          <p> {window.CS.getUIState().waitingForResponse.toString()}{window.CS.getUIState().counter}</p>\r\n          <h1>simple lesson management application</h1>\r\n          <p>to create a new lesson click this button:&nbsp;\r\n            <button onClick={this.handleCreateLesson}>create lesson</button>\r\n          </p>\r\n          <table>\r\n            <tbody>\r\n              <tr><th>description</th><th>duration</th><th>location</th><th>price</th><th>equip</th><th>language</th><th>amount of People</th><th>Email</th><th>about the Teacher</th></tr>\r\n              {window.CS.getBMState().lessons.map(lesson => <SimpleLesson key={lesson._id} lesson={lesson} edit={false} />)}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        )\r\n    }\r\n    handleCreateLesson() {\r\n        console.log(\"handleCreateLesson invoked\");\r\n        const uiAction: IAction = {\r\n          type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        const newLesson: ILessonData = {\r\n          _id: mongoose.Types.ObjectId().toString(),\r\n          lesson_name: \"Tennis\",\r\n          lesson_duration:25,\r\n          lesson_location: \"Ingolstadt\",\r\n          lesson_price: 35,\r\n          lesson_equip: \"Tennisschläger und Tennisschuhe\",\r\n          lesson_language:\"deutsch\",\r\n          lesson_amountPeople: \"4\",\r\n          lesson_eMailTeacher: \"primosch@mediamarktsaturn.com\",\r\n          lesson_aboutTeacher: \"Hallo, ich bin der Tennistrainer.\",\r\n        }\r\n        const action: ILessonAction = {\r\n          type: ActionType.create_lesson,\r\n          lesson: newLesson\r\n        }\r\n        axios.post('/lessons/add', newLesson)\r\n        .then(res => {\r\n          window.CS.clientAction(action);\r\n          console.log(res.data)\r\n        });\r\n      }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport history from '../framework/history';\r\n\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    searchQuery: ''\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"field has-addons\"\r\n        style={{\r\n          padding: \"20px\",\r\n          margin: \"20px\"\r\n        }}\r\n      >\r\n        <div className=\"control\">\r\n\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            name=\"query\"\r\n            value={this.props.value}\r\n            onChange={e => this.setState({searchQuerye: e.target.value})}\r\n            placeholder=\"Search For Lesson\" />\r\n        </div>\r\n        \r\n        <div className=\"control\">\r\n          <a className=\"button is-info\" onClick={()=>this.props.onSearch(this.state.searchQuery)}>\r\n            Search\r\n        </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar; ","import React from 'react';\r\nimport NavBar from './components/NavBar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ShowLessons from './components/ShowLesson';\r\nimport SearchBar from './components/SearchBar';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { IAction, ActionType } from './framework/IAction';\r\nimport { ILessonData, IState } from './state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from './reducer/appReducer';\r\n\r\nimport { IWindow } from './framework/IWindow'\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n  stateCounter: number\r\n}\r\n\r\nexport interface ILessonsLoadedAction extends IAction {\r\n  lessons: ILessonData[]\r\n}\r\nreducerFunctions[ActionType.server_called] = function (newState: IState, action: IAction) {\r\n  newState.UI.waitingForResponse = true;\r\n  return newState;\r\n}\r\nreducerFunctions[ActionType.add_lessons_from_server] = function (newState: IState, action: ILessonsLoadedAction) {\r\n  newState.UI.waitingForResponse = false;\r\n  newState.BM.lessons = action.lessons;\r\n  return newState;\r\n}\r\nexport default class App extends React.PureComponent<IProps, IState > {\r\n  componentDidMount() {\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(uiAction);\r\n    axios.get('/lessons/read').then(response => {\r\n      console.log(\"this data was loaded as a result of componentDidMount:\");\r\n      console.log(response.data);\r\n      const responseAction: ILessonsLoadedAction = {\r\n        type: ActionType.add_lessons_from_server,\r\n        lessons: response.data as ILessonData[]\r\n      }\r\n      window.CS.clientAction(responseAction);\r\n    }).catch(function (error) { console.log(error); })\r\n  }\r\n\r\n  handleQuery = (searchQuery: string) => {\r\n    axios.post('/lessons/search', searchQuery).then(response => {\r\n      console.log(response.data);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    window.CS.log(\"App --> render()\")\r\n    return (\r\n      <div className=\"container-fluid\">.\r\n        <NavBar />\r\n        <SearchBar\r\n        onSearch={this.handleQuery}\r\n        />\r\n        <Switch>\r\n          <Route path=\"/showlessons\" component={ShowLessons} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/\" component={Login} />\r\n        </Switch>\r\n        </div>\r\n         );\r\n  }\r\n\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve lessons; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { reducer } from '../reducer/appReducer'\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport { IUI, IBM } from '../state/appState';\r\nimport { IWindow } from './IWindow'\r\nimport { IAction } from './IAction';\r\ndeclare let window: IWindow;\r\n\r\n//Dev tools are needed so we can see the state in the browser\r\n//Redux thunk is needed for actions that make a rest call in order to create another action, when the server responds\r\nlet reduxMiddleware: any;\r\nif (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    reduxMiddleware = compose(\r\n        applyMiddleware(ReduxThunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n} else { reduxMiddleware = applyMiddleware(ReduxThunk); }\r\n\r\n\r\nexport class CS {\r\n    private store: any;\r\n    public log(message: string) {\r\n        console.log(message);\r\n    }\r\n    public getStore(){\r\n        return this.store;\r\n    }\r\n    public getState() {\r\n        return this.store.getState();\r\n    }\r\n    public getUIState() {\r\n        return this.getState().UI as IUI;\r\n    }\r\n    public getBMState() {\r\n        return this.getState().BM as IBM;\r\n    }\r\n    public initializeStore() {\r\n        this.store = createStore(\r\n            reducer,\r\n            reduxMiddleware\r\n        );\r\n    }\r\n   //changed this to any because of the thunk returning a function ...\r\n   public clientAction(action:IAction | Function){\r\n    this.store.dispatch(action);\r\n    }\r\n    public getDBServerURL_test(){\r\n        //return \"https://patricks-boilerplate.herokuapp.com/\";\r\n        return \"http://localhost:8080\";\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport history from './framework/history';\r\n//import framework components\r\n//CS: ClientServices, we will use them a lot, so to shorten the code they are just called: CS\r\nimport { CS } from './framework/CS';\r\n//we will add a CS instance to the window object.\r\n//We also want the window object strictly typed, so we declare that window has the type \"IWindow\"\r\nimport { IWindow } from './framework/IWindow'\r\ndeclare let window: IWindow;\r\nwindow.CS = new CS();\r\n//we create the inital Application State macht store \r\nwindow.CS.initializeStore();\r\n\r\n//now we can render this state to the DOM using React\r\nReactDOM.render(\r\n  <Router history={history}>\r\n  <App stateCounter={window.CS.getUIState().counter} />\r\n  </Router>\r\n, document.getElementById('root'));\r\n\r\n\r\n//whenever there is a new state, we render the whole virtual DOM again\r\n//React will take care that only the differences from the previous and\r\n//the current virtual DOM will be rendered to the browser DOM\r\nwindow.CS.getStore().subscribe(() => {\r\n  window.CS.log(\"3. before render ---------------------------------------------\");\r\n  ReactDOM.render(<Router history={history}>\r\n                  <App stateCounter={window.CS.getUIState().counter} />\r\n                  </Router>, document.getElementById('root'));\r\n  window.CS.log(\"3. after render ---------------------------------------------\");\r\n});\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}