{"version":3,"sources":["framework/IAction.ts","state/appState.ts","reducer/appReducer.ts","framework/history.ts","components/Login.tsx","components/NavBar.tsx","components/Register.tsx","components/SimpleLesson.tsx","components/ShowLesson.tsx","components/SearchBar.tsx","components/SearchResult.tsx","components/CreateLesson.tsx","components/LessonDetail.tsx","components/EditProfile.tsx","App.tsx","serviceWorker.ts","framework/CS.ts","index.tsx"],"names":["ActionType","initial","UI","counter","loggedIn","waitingForResponse","Login","errorMessage","BM","user","firstname","lastname","username","password","lessons","searchQuery","searchResult","reducerFunctions","reducer","state","action","window","CS","log","type","newState","JSON","parse","stringify","reducerFunction","undefined","INIT","createBrowserHistory","login_error","user_logged_in","user_logged_out","getUIState","getBMState","className","onClick","handleLogout","onSubmit","this","handleSubmit","style","marginTop","htmlFor","onChange","handleUsernameChange","value","id","aria-describedby","placeholder","handlePasswordChange","event","target","update_user","clientAction","preventDefault","uiAction","server_called","axios","post","then","res","data","console","loggedinAction","history","push","Component","get","loggedoutAction","nav","props","logoutDependantNavbar","to","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","updateAction","user_created","Register","handleFirstnameChange","handleLastnameChange","lesson_updated","update_lesson","lessonToChange","filter","lesson","_id","lesson_name","lesson_duration","lesson_location","lesson_price","lesson_equip","lesson_language","lesson_amountPeople","lesson_eMailTeacher","lesson_aboutTeacher","delete_lesson","deleteAction","lessonsToKeep","SimpleLesson","handleSwitchToEditMode","bind","handleNameChange","handleDurationChange","handleLocationChange","handlePriceChange","handleEquipChange","handleLanguageChange","handleAmountPeopleChange","handleEmailTeacherChange","handleAboutTeacherChange","handleSave","handleRerenderTest","handleDelete","edit_mode","edit","name","setState","newLesson","put","render_test","React","PureComponent","create_lesson","ShowLessons","handleCreateLesson","toString","map","key","mongoose","Types","ObjectId","update_search","search","update_search_results","SearchBar","handleQuery","a","response","handleChangeHandler","e","src","alt","width","height","role","SearchResult","length","item","marginBottom","lesson_pictureURL","textDecoration","color","lesson_rating","CreateLesson","handleChange","document","getElementById","innerText","Button","textAlign","margin","LessonDetail","emailHandler","changeHandler","match","params","email","subject","message","lessonToRender","lesson_abaoutTeacher","EditProfile","saveProfile","aiAction","user_updated","renderEditMode","renderViewMode","add_lessons_from_server","App","responseAction","catch","error","NavBar","path","component","render","Boolean","location","hostname","reduxMiddleware","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","ReduxThunk","store","getState","createStore","dispatch","initializeStore","ReactDOM","stateCounter","getStore","subscribe","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14a6065a.chunk.js","sourcesContent":["export enum ActionType {\r\n    INIT = \"@@INIT\",\r\n    login_error = \"login_error\",\r\n    user_logged_in = \"user_logged_in\",\r\n    user_logged_out = \"user_logged_out\",\r\n    update_user = \"update_user\",\r\n    user_created = \"user_created\",\r\n    user_exists = \"user_exists\",\r\n    create_lesson = \"create_lesson\",\r\n    update_lesson = \"update_lesson\",\r\n    delete_lesson = \"delete_lesson\",\r\n    render_test = \"render_test\",\r\n    server_called = \"server_called\",\r\n    lesson_updated = \"lesson_updated\",\r\n    add_lessons_from_server = \"add_lessons_from_server\",\r\n    update_search = \"update_search\",\r\n    update_search_results = 'update_search_results',\r\n    user_updated = 'user_updated'\r\n}\r\nexport interface IAction {\r\n    type: ActionType;\r\n}\r\n","export interface IUser {\r\n    firstname:string;\r\n    lastname:string;\r\n    username:string;\r\n    password:string;\r\n}\r\n\r\nexport interface ILogin{\r\n    errorMessage:string;\r\n}\r\n\r\nexport interface IUI{\r\n    counter: number;\r\n    loggedIn: boolean;\r\n    waitingForResponse:boolean;\r\n    Login: ILogin;\r\n}\r\n\r\nexport interface ILessonData {\r\n    _id?: any;\r\n    lesson_name: string;\r\n    lesson_duration?:number;\r\n    lesson_location?: string;\r\n    lesson_price?: number;\r\n    lesson_equip?: string;\r\n    lesson_language?:string;\r\n    lesson_amountPeople?: string;\r\n    lesson_eMailTeacher?: string;\r\n    lesson_aboutTeacher?: string;\r\n    lesson_pictureURL?: string;\r\n    lesson_rating?: number;\r\n    \r\n  }\r\n\r\nexport interface IBM{\r\n    _id?: string;\r\n    user:IUser;\r\n    lessons:ILessonData[];\r\n    searchQuery:string;\r\n    searchResult: any;\r\n}\r\n\r\nexport interface IState{\r\n    UI:IUI;\r\n    BM:IBM;\r\n}\r\n\r\n// initial state \r\n// initial state\r\nexport const initial:IState = {\r\n    UI: {\r\n        counter: 0,\r\n        loggedIn: false,\r\n        waitingForResponse: false,\r\n        Login: {errorMessage:\"\"}\r\n   },\r\n    BM: {\r\n       user:{\r\n           firstname:\"\",\r\n           lastname:\"\",\r\n           username:\"\",\r\n           password:\"\"\r\n       },\r\n       lessons:[],\r\n       searchQuery:\"\",\r\n       searchResult: []\r\n    }\r\n};","import { initial, IState } from '../state/appState'\r\nimport { IWindow } from '../framework/IWindow'\r\nimport { IAction, ActionType } from '../framework/IAction'\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport const reducerFunctions:any = {};\r\n\r\nexport const reducer = (state = initial, action: IAction) => {\r\n    window.CS.log(\"2. ACTION:\" + action.type);\r\n    let newState:IState = JSON.parse(JSON.stringify(state)) as IState;\r\n    newState.UI.counter = state.UI.counter + 1;\r\n    const reducerFunction = reducerFunctions[action.type];\r\n\tif (reducerFunction !== undefined) {\r\n\t\treducerFunction(newState,action);\r\n        return newState;\r\n    }\r\n    switch (action.type) {\r\n        case ActionType.INIT:\r\n            return newState;\r\n        default:\r\n            window.CS.log(\"1. Error!!!!! no reducer defined\");\r\n            return newState;\r\n    }\r\n}\r\n\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { Component } from 'react'\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { IUserAction } from './Register';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport interface IErrorMessage extends IAction {\r\n    errorMessage: string;\r\n}\r\n\r\nreducerFunctions[ActionType.login_error] = function (newState: IState, action: IErrorMessage) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = action.errorMessage;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_in] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = true;\r\n    newState.BM.user = action.user;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_out] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = false;\r\n    newState.BM.user = { lastname: \"\", firstname: \"\", username: \"\", password: \"\" };\r\n    return newState\r\n}\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        if (window.CS.getUIState().loggedIn)\r\n            return (\r\n                <div>\r\n                    <p>You are logged in as {window.CS.getBMState().user.username}</p>\r\n                    <button className=\"btn btn-primary\" onClick={handleLogout}>Logout</button>\r\n                </div>\r\n            )\r\n        else\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <form onSubmit={this.handleSubmit}>\r\n\r\n                            <div className=\"row  \" style={{ marginTop: '50px' }} >\r\n                                <div className=\"col-md-4\"></div>\r\n                                <div className=\"col-md-4 bg-light\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleInputEmail1\">Username</label>\r\n                                        <input type=\"username\" className=\"form-control\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\r\n                                        <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                                        <input type=\"password\" className=\"form-control\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group form-check\">\r\n                                        <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Check me out</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\"></div>\r\n\r\n                            </div>\r\n                            <div className=\"row d-flex justify-content-center\" style={{ marginTop: '50px' }}>\r\n                                <div className=\"col-md-5\"></div>\r\n                                <div className=\"col-md-7\">\r\n                                    <input className=\"btn btn-primary\" type=\"submit\" value=\"Login\" /></div>\r\n\r\n                                <div className=\"d-flex justify-content-center\"></div>\r\n                                <div className=\"col-md-4\" style={{ marginTop: '50px' }}>\r\n                                   {window.CS.getUIState().Login.errorMessage}\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n    }\r\n\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/login', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const data = res.data;\r\n                console.log(data);\r\n                if (data.errorMessage) {\r\n                    const uiAction: IErrorMessage = {\r\n                        type: ActionType.login_error,\r\n                        errorMessage: data.errorMessage\r\n                    }\r\n                    window.CS.clientAction(uiAction);\r\n                } else {\r\n                    const loggedinAction: IUserAction = {\r\n                        type: ActionType.user_logged_in,\r\n                        user: data as IUser\r\n                    }\r\n                    window.CS.clientAction(loggedinAction);\r\n                    history.push(\"/\");\r\n                }\r\n                console.log(window.CS.getUIState().loggedIn)\r\n            });\r\n    }\r\n}\r\nexport const handleLogout = () => {\r\n    const uiAction: IAction = {\r\n        type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(uiAction);\r\n    axios.get('/auth/logout').then(res => {\r\n        const loggedoutAction: IAction = {\r\n            type: ActionType.user_logged_out\r\n        }\r\n        window.CS.clientAction(loggedoutAction);\r\n    }\r\n    );\r\n}","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { IWindow } from '../framework/IWindow'\r\nimport { handleLogout } from './Login';\r\n//import Nav.Link from 'react-bootstrap/Nav.Link';\r\n\r\ndeclare let window: IWindow;\r\n// Funktion logoutDependantNavbar: \r\nconst nav = (props: any) => {\r\n    const logoutDependantNavbar = window.CS.getUIState().loggedIn // wenn eingeloggt, <> zeige mehrere children </>, : wenn nicht eingeloggt <> zeige diese children </>\r\n        ?\r\n        <>\r\n\r\n            <Link className=\"nav-item nav-link\" to=\"/createlesson\">MyLessons </Link>\r\n            <Link className=\"nav-item nav-link\" to=\"/editprofile\">Profile </Link>\r\n        </>\r\n        :\r\n        <>\r\n            <Link className=\"nav-item nav-link\" to=\"/login\">Login </Link>\r\n            <Link className=\"nav-item nav-link\" to=\"/register\">Register </Link>\r\n        </>\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"/home\">easyTeach</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                <div className=\"navbar-nav\">\r\n                    <Link className=\"nav-item nav-link\" to=\"/home\">Home </Link>\r\n                    {logoutDependantNavbar}\r\n                </div>\r\n                <div className=\"ml-auto\">\r\n                    {\r\n                        window.CS.getUIState().loggedIn \r\n                            ?\r\n                            <small>Hello, {window.CS.getBMState().user.firstname}<br/>\r\n                            <Link className=\"nav-item nav-link pt-0 pb-0 \" onClick={handleLogout} to=\"/home\">Logout</Link></small>\r\n                            :\r\n                            null\r\n\r\n                }\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\nexport default nav;\r\n\r\n// <Link className=\"nav-item nav-link\" to=\"/home\">Home </Link>  >> zeige das in der Navbar an und returne die Funktion {logoutDependantNavbar}\r\n","import React, { Component } from 'react'\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport interface IUserAction extends IAction {\r\n    user: IUser\r\n}\r\n\r\nreducerFunctions[ActionType.update_user] = function (newState: IState, updateAction: IUserAction) {\r\n    console.log(updateAction.user);\r\n    newState.BM.user = updateAction.user;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_created] = function (newState: IState, updateAction: IUserAction) {\r\n    console.log(updateAction.user);\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.loggedIn = true;\r\n    return newState\r\n}\r\nexport default class Register extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    <div className=\"row\" style={{ marginTop: '50px' }} >\r\n                        <div className=\"col-md-4\"></div>\r\n                        <div className=\"col-md-4 bg-light\">\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"firstname\">First name</label>\r\n                                <input type=\"text\" onChange={this.handleFirstnameChange} value={window.CS.getBMState().user.firstname} className=\"form-control\" placeholder=\"First name\" />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"lastname\">Last name:</label>\r\n                                <input type=\"text\" onChange={this.handleLastnameChange} value={window.CS.getBMState().user.lastname} className=\"form-control\" placeholder=\"Last name\" />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"username\">Username</label>\r\n                                <input type=\"text\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} className=\"form-control\" placeholder=\"Username\" />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} className=\"form-control\" placeholder=\"Password\" />\r\n                                <br/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-4\"></div>\r\n\r\n                    </div>\r\n                    <div className=\"row\" style={{ marginTop: '50px' }}>\r\n                        <div className=\"col-md-5\"></div>\r\n                        <input className=\"btn btn-primary\" type=\"submit\" value=\"Register as new User\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleFirstnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.firstname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleLastnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.lastname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/signup', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const uiAction: IAction = {\r\n                    type: ActionType.user_created\r\n                }\r\n                history.push('/');\r\n                window.CS.clientAction(uiAction);\r\n\r\n                console.log(res.data)\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { ILessonAction } from './ShowLesson';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { ILessonData, IState } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\ndeclare let window: IWindow;\r\n\r\n//this file defines the React component that renders a single lesson to the browser window\r\n//it also contains the logic to change lesson properties and save the changes to the database\r\n//most of the used React framework features are already explained in the comments of App.js\r\n//so this code hopefully mostly explains itself ...\r\n\r\ninterface IProps {\r\n    edit: boolean;\r\n    lesson: ILessonData;\r\n}\r\n\r\ninterface IJSXState {\r\n    edit_mode: boolean;\r\n}\r\n\r\nreducerFunctions[ActionType.lesson_updated] = function (newState: IState, updateAction: ILessonAction) {\r\n    newState.UI.waitingForResponse=false;\r\n}\r\nreducerFunctions[ActionType.update_lesson] = function (newState: IState, updateAction: ILessonAction) {\r\n    let lessonToChange: ILessonData[] = newState.BM.lessons.filter(lesson => lesson._id === updateAction.lesson._id)\r\n    console.log(lessonToChange);\r\n    lessonToChange[0].lesson_name = updateAction.lesson.lesson_name;\r\n    lessonToChange[0].lesson_duration = updateAction.lesson.lesson_duration;\r\n    lessonToChange[0].lesson_location = updateAction.lesson.lesson_location;\r\n    lessonToChange[0].lesson_price = updateAction.lesson.lesson_price;\r\n    lessonToChange[0].lesson_equip = updateAction.lesson.lesson_equip;\r\n    lessonToChange[0].lesson_language = updateAction.lesson.lesson_language;\r\n    lessonToChange[0].lesson_amountPeople = updateAction.lesson.lesson_amountPeople;\r\n    lessonToChange[0].lesson_eMailTeacher = updateAction.lesson.lesson_eMailTeacher;\r\n    lessonToChange[0].lesson_aboutTeacher = updateAction.lesson.lesson_aboutTeacher;\r\n    return lessonToChange;\r\n}\r\nreducerFunctions[ActionType.delete_lesson] = function (newState: IState, deleteAction: ILessonAction) {\r\n    let lessonsToKeep: ILessonData[] = newState.BM.lessons.filter(lesson => lesson._id !== deleteAction.lesson._id)\r\n    newState.BM.lessons = lessonsToKeep;\r\n    return newState;\r\n}\r\n\r\n\r\nexport default class SimpleLesson extends React.PureComponent<IProps, IJSXState> {\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.handleSwitchToEditMode = this.handleSwitchToEditMode.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleDurationChange = this.handleDurationChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handlePriceChange = this.handlePriceChange.bind(this);\r\n        this.handleEquipChange = this.handleEquipChange.bind(this);\r\n        this.handleLanguageChange = this.handleLanguageChange.bind(this);\r\n        this.handleAmountPeopleChange = this.handleAmountPeopleChange.bind(this);\r\n        this.handleEmailTeacherChange = this.handleEmailTeacherChange.bind(this);\r\n        this.handleAboutTeacherChange = this.handleAboutTeacherChange.bind(this);\r\n\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.handleRerenderTest = this.handleRerenderTest.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n\r\n        this.state = {\r\n            edit_mode: props.edit,\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        //if the component is in edit mode, it will render different than if it just shows the data\r\n        if (this.state.edit_mode)\r\n            return (\r\n                <tr>\r\n                    <td><input type=\"text\" name=\"name\" value={this.props.lesson.lesson_name} onChange={this.handleNameChange} /></td>\r\n                    <td><input type=\"text\" name=\"duration\" value={this.props.lesson.lesson_duration} onChange={this.handleDurationChange} /></td>\r\n                    <td><input type=\"text\" name=\"location\" value={this.props.lesson.lesson_location} onChange={this.handleLocationChange} /></td>\r\n                    <td><input type=\"text\" name=\"name\" value={this.props.lesson.lesson_price} onChange={this.handlePriceChange} /></td>\r\n                    <td><input type=\"text\" name=\"name\" value={this.props.lesson.lesson_equip} onChange={this.handleEquipChange} /></td>\r\n                    <td><input type=\"text\" name=\"name\" value={this.props.lesson.lesson_language} onChange={this.handleLanguageChange} /></td>\r\n                    <td><input type=\"text\" name=\"name\" value={this.props.lesson.lesson_amountPeople} onChange={this.handleAmountPeopleChange} /></td>\r\n                    <td><input type=\"text\" name=\"name\" value={this.props.lesson.lesson_eMailTeacher} onChange={this.handleEmailTeacherChange} /></td>\r\n                    <td><input type=\"text\" name=\"name\" value={this.props.lesson.lesson_aboutTeacher} onChange={this.handleAboutTeacherChange} /></td>\r\n\r\n                    <td>\r\n                        <button onClick={this.handleSave} id={this.props.lesson._id}>save</button>\r\n                        <button onClick={this.handleRerenderTest} >increase State Counter</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        else\r\n            return (\r\n                <tr>\r\n                    <td>{this.props.lesson.lesson_name}</td>\r\n                    <td>{this.props.lesson.lesson_duration} Minuten</td>\r\n                    <td>{this.props.lesson.lesson_location} </td>\r\n                    <td>{this.props.lesson.lesson_price} €</td>\r\n                    <td>{this.props.lesson.lesson_equip} </td>\r\n                    <td>{this.props.lesson.lesson_language} </td>\r\n                    <td>{this.props.lesson.lesson_amountPeople} </td>\r\n                    <td>{this.props.lesson.lesson_eMailTeacher} </td>\r\n                    <td>{this.props.lesson.lesson_aboutTeacher} </td>\r\n\r\n                    <td>\r\n                        <button onClick={this.handleSwitchToEditMode}>edit</button>\r\n                        <button onClick={this.handleDelete} id={this.props.lesson._id}>sell or dispose</button>\r\n                        <button onClick={this.handleRerenderTest} >increase State Counter {window.CS.getUIState().counter}</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n    }\r\n    handleSwitchToEditMode() {\r\n        this.setState({ edit_mode: true });\r\n    }\r\n    handleNameChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_name = event.target.value\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleDurationChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_duration = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleLocationChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_location = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePriceChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_price = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleEquipChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_equip = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleLanguageChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_language = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n            \r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleAmountPeopleChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_amountPeople = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleEmailTeacherChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_eMailTeacher = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleAboutTeacherChange(event: any) {\r\n        const newLesson = this.props.lesson;\r\n        newLesson.lesson_aboutTeacher = event.target.value;\r\n        const action: ILessonAction = {\r\n            type: ActionType.update_lesson,\r\n            lesson: newLesson\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleSave(event: any) {\r\n        this.setState({ edit_mode: false });\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n          }\r\n          window.CS.clientAction(uiAction);\r\n        axios.put('/lessons/update/' + this.props.lesson._id, this.props.lesson)\r\n        .then(res => {\r\n            console.log(res)\r\n            const uiAction: IAction = {\r\n                type: ActionType.lesson_updated\r\n              }\r\n              window.CS.clientAction(uiAction);\r\n        });\r\n    }\r\n    handleDelete() {\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n          }\r\n          window.CS.clientAction(uiAction);\r\n          axios.post('/lessons/delete/' + this.props.lesson._id)\r\n          .then(res => {\r\n            const action: ILessonAction = {\r\n                type: ActionType.delete_lesson,\r\n                lesson: this.props.lesson\r\n            }\r\n            window.CS.clientAction(action)\r\n          });\r\n    }\r\n    handleRerenderTest(event: any) {\r\n        const action: IAction = {\r\n            type: ActionType.render_test,\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nimport SimpleLesson from './SimpleLesson'\r\nimport mongoose from 'mongoose';\r\nimport { IAction, ActionType } from '../framework/IAction';\r\nimport {ILessonData,IState} from '../state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\n\r\nimport { IWindow } from '../framework/IWindow'\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps{};\r\ninterface IJSXState { };\r\nexport interface ILessonAction extends IAction {\r\n  lesson: ILessonData\r\n}\r\nreducerFunctions[ActionType.create_lesson] = function (newState: IState, action: ILessonAction) {\r\n  newState.BM.lessons.push(action.lesson);\r\n  newState.UI.waitingForResponse=false;\r\n  return newState;\r\n}\r\n\r\nexport default class ShowLessons extends Component<IProps, IJSXState> {\r\n    constructor(props: any) {\r\n        console.log(\"new App component will be initialized\");\r\n        super(props);\r\n        this.handleCreateLesson = this.handleCreateLesson.bind(this);\r\n      }\r\n    render() {\r\n        return (\r\n            <div>\r\n          <p> {window.CS.getUIState().waitingForResponse.toString()}{window.CS.getUIState().counter}</p>\r\n          <h1>simple lesson management application</h1>\r\n          <p>to create a new lesson click this button:&nbsp;\r\n            <button onClick={this.handleCreateLesson}>create lesson</button>\r\n          </p>\r\n          <table>\r\n            <tbody>\r\n              <tr><th>description</th><th>duration</th><th>location</th><th>price</th><th>equip</th><th>language</th><th>amount of People</th><th>Email</th><th>about the Teacher</th></tr>\r\n              {window.CS.getBMState().lessons.map(lesson => <SimpleLesson key={lesson._id} lesson={lesson} edit={false} />)}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        )\r\n    }\r\n    handleCreateLesson() {\r\n        console.log(\"handleCreateLesson invoked\");\r\n        const uiAction: IAction = {\r\n          type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        const newLesson: ILessonData = {\r\n          _id: mongoose.Types.ObjectId().toString(),\r\n          lesson_name: \"Tennis\",\r\n          lesson_duration:25,\r\n          lesson_location: \"Ingolstadt\",\r\n          lesson_price: 35,\r\n          lesson_equip: \"Tennisschläger und Tennisschuhe\",\r\n          lesson_language:\"deutsch\",\r\n          lesson_amountPeople: \"4\",\r\n          lesson_eMailTeacher: \"primosch@mediamarktsaturn.com\",\r\n          lesson_aboutTeacher: \"Hallo, ich bin der Tennistrainer.\",\r\n        }\r\n        const action: ILessonAction = {\r\n          type: ActionType.create_lesson,\r\n          lesson: newLesson\r\n        }\r\n        axios.post('/lessons/add', newLesson)\r\n        .then(res => {\r\n          window.CS.clientAction(action);\r\n          console.log(res.data)\r\n        });\r\n      }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { IState } from '../state/appState'\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport axios from 'axios';\r\nimport SimpleLesson from './SimpleLesson';\r\nimport history from '../framework/history';\r\nimport { Link } from 'react-router-dom';\r\n\r\ndeclare const window: IWindow;\r\nexport interface ISearchAction extends IAction {\r\n  search: string;\r\n}\r\n\r\nexport interface ISearchResultAction extends IAction {\r\n  data: Object;\r\n}\r\n\r\nreducerFunctions[ActionType.update_search] = function (newState: IState, action: ISearchAction) {\r\n  newState.BM.searchQuery = action.search;\r\n  return newState;\r\n}\r\n\r\nreducerFunctions[ActionType.update_search_results] = function (newState: IState, action: ISearchResultAction) {\r\n  newState.BM.searchResult = action.data;\r\n  return newState;\r\n}\r\n\r\nclass SearchBar extends Component<{}, IState> {\r\n  handleQuery = async () => {\r\n    await axios.get('/lessons/search?query=' + window.CS.getBMState().searchQuery).then(response => {\r\n      console.log(response)\r\n      const action: ISearchResultAction = {\r\n        type: ActionType.update_search_results,\r\n        data: response.data\r\n      }\r\n      history.push('/searchresult');\r\n      window.CS.clientAction(action);\r\n    });\r\n  }\r\n  handleChangeHandler = (e: any) => {\r\n    const action: ISearchAction = {\r\n      type: ActionType.update_search,\r\n      search: e.target.value\r\n    }\r\n    window.CS.clientAction(action)\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"row\" style={{ marginTop: '10%' }}>\r\n        <div className=\"col-md-4\"></div>\r\n        <div className=\"col-md-4 \">\r\n          <input className=\"form-control\" type=\"text\" name=\"query\" value={window.CS.getBMState().searchQuery} onChange={e => this.handleChangeHandler(e)} placeholder=\"Search For Lesson\" />\r\n        </div>\r\n        <div className=\" col-md-4 col-xs-4\" >\r\n          <button className=\"btn btn-primary\" onClick={this.handleQuery}>\r\n            Search\r\n       </button>\r\n        </div>\r\n      </div>\r\n      \r\n<div className=\"container marketing\" style={{ marginTop: '5%' }}>\r\n  <div className=\"row\">\r\n    <div className=\"col-lg-4 d-flex flex-column justify-content-center align-items-center text-center\">\r\n      <img className=\"rounded-circle\" src={'.././German.jpg'}  alt=\"teacher-pic\" width='130' height='130' />\r\n      <h3>Stefan Arndt</h3>\r\n      <p>\"German as foreign language adjusted to your level!\"</p>\r\n      <p><Link className = \"btn btn-primary\" to = \"/login\" role=\"button\" >View details</Link></p>\r\n    </div>\r\n    <div className=\"col-lg-4 d-flex flex-column justify-content-center align-items-center text-center\">\r\n      <img className=\"rounded-circle\" src={'.././Math.JPG'}  alt=\"teacher-pic\" width='130' height='130' />\r\n      <h3>Peter Hendricks</h3>\r\n      <p>\"Mathematics for your base studies - until you pass your tests.\"</p>\r\n      <p><Link className = \"btn btn-primary\" to = \"/login\" role=\"button\" >View details</Link></p>\r\n    </div>\r\n    <div className=\"col-lg-4 d-flex flex-column justify-content-center align-items-center text-center\">\r\n      <img className=\"rounded-circle\" src={'.././Music.jpg'}  alt=\"teacher-pic\" width='130' height='130' />\r\n      <h3>Claudia Moy</h3>\r\n      <p>\"Music Lessons for students and children from a professional Oboist.\"</p>\r\n      <p><Link className = \"btn btn-primary\" to = \"/login\" role=\"button\" >View details</Link></p>\r\n    </div>\r\n  </div>\r\n</div>\r\n</>\r\n    );\r\n  }\r\n}\r\nexport default SearchBar;","import React, { Component } from 'react';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { IState } from '../state/appState'\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport axios from 'axios';\r\nimport SimpleLesson from './SimpleLesson';\r\nimport SearchBar from './SearchBar';\r\nimport history from '../framework/history';\r\nimport { Link } from 'react-router-dom';\r\n\r\ndeclare const window: IWindow;\r\nexport interface ISearchAction extends IAction {\r\n  search: string;\r\n}\r\n\r\nexport interface ISearchResultAction extends IAction {\r\n  data: Object;\r\n}\r\n\r\nclass SearchResult extends Component<{}, IState> {\r\n  handleQuery = () => {\r\n    history.push('/');\r\n  }\r\n\r\n  render() {\r\n    if (window.CS.getBMState().searchResult.length == 0) {\r\n      return (\r\n        <div className=\"row d-flex justify-content-start\" style={{ marginTop: '50px' }} >\r\n          <div className=\"col-md-2\"></div>\r\n          <div className=\"col-md-6 \">\r\n            <div className=\"jumbotron\">\r\n              <div className=\"container\">\r\n                <h1 className=\"display-4\">Sorry!</h1>\r\n                <p className=\"lead\">We have currently no Teacher for your search...</p>\r\n              </div></div>\r\n          </div></div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n            <h5 className=\"d-flex justify-content-center\" >We found following results for your search:</h5>\r\n\r\n          {window.CS.getBMState().searchResult ? window.CS.getBMState().searchResult.map((item: any) =>\r\n            <>\r\n              <div className=\"row\" style={{ marginTop: '2%' }} ></div>\r\n              \r\n\r\n\r\n              <div className=\"row \" style={{ marginTop: '2%', marginBottom: '2%' }} key={item._id} >\r\n\r\n                <div className=\"col-md-2\" ></div>\r\n                <div className=\"col-md-8 bg-primary\" >\r\n                  <img src={item.lesson_pictureURL} />\r\n\r\n                  <div className=\"d-flex justify-content-around bg-light\"> <span>{item.lesson_name}</span>   <span>{item.lesson_location}</span>  <span>{item.lesson_price}€</span> </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-md-2 d-flex justify-content-center\" style={{ marginTop: '2%' }}> <button className=\"btn btn-primary \" id={item._id}><Link style={{ textDecoration: 'none', color: 'white' }} to={'/LessonDetail/read/' + item._id}>Show</Link></button></div>\r\n              </div></>) : null}\r\n\r\n          <div className=\"row\">\r\n            <div className=\" col-md-4 col-xs-4\" > </div>\r\n            <div className=\"col-md-4 d-flex justify-content-center\" style={{ marginTop: '2%' }}>\r\n              <button className=\"btn btn-primary\" onClick={this.handleQuery} >Back</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      );\r\n\r\n    }\r\n  }\r\n}\r\nexport default SearchResult;","import React, { ChangeEvent } from 'react'\r\nimport { ILessonAction } from './ShowLesson';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { ILessonData, IState } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport history from '../framework/history';\r\nimport './CreateLesson.css';\r\nimport mongoose from 'mongoose';\r\nimport { string } from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\ndeclare let window: IWindow;\r\n\r\n\r\n\r\n\r\ninterface IJSXState {\r\n    lesson: {\r\n        [key: string]: string | number;\r\n        lesson_name: any;\r\n        lesson_duration?: any;\r\n        lesson_location?: any;\r\n        lesson_price?: any;\r\n        lesson_equip?: any;\r\n        lesson_language?: any;\r\n        lesson_amountPeople?: any;\r\n        lesson_eMailTeacher?: any;\r\n        lesson_aboutTeacher?: any;\r\n        lesson_pictureURL?: any;\r\n        lesson_rating?: any;\r\n    }\r\n}\r\n\r\nreducerFunctions[ActionType.lesson_updated] = function (newState: IState, updateAction: ILessonAction) {\r\n    newState.UI.waitingForResponse = false;\r\n}\r\nreducerFunctions[ActionType.create_lesson] = function (newState: IState, updateAction: ILessonAction) {\r\n    let newLesson: any = {\r\n        lesson_name: updateAction.lesson.lesson_name,\r\n        lesson_duration: updateAction.lesson.lesson_duration,\r\n        lesson_location: updateAction.lesson.lesson_location,\r\n        lesson_price: updateAction.lesson.lesson_price,\r\n        lesson_equip: updateAction.lesson.lesson_equip,\r\n        lesson_language: updateAction.lesson.lesson_language,\r\n        lesson_amountPeople: updateAction.lesson.lesson_amountPeople,\r\n        lesson_eMailTeacher: updateAction.lesson.lesson_eMailTeacher,\r\n        lesson_aboutTeacher: updateAction.lesson.lesson_aboutTeacher,\r\n        lesson_pictureURL: updateAction.lesson.lesson_pictureURL,\r\n        lesson_rating: updateAction.lesson.lesson_rating\r\n    };\r\n    console.log(newLesson);\r\n    return newLesson;\r\n}\r\n\r\n\r\nexport default class CreateLesson extends React.Component<{}, IJSXState> {\r\n    state: IJSXState = {\r\n        lesson: {\r\n            lesson_name: '',\r\n            lesson_duration: 0,\r\n            lesson_location: '',\r\n            lesson_price: 0,\r\n            lesson_equip: '',\r\n            lesson_language: '',\r\n            lesson_amountPeople: '',\r\n            lesson_eMailTeacher: '',\r\n            lesson_aboutTeacher: '',\r\n            lesson_pictureURL: '',\r\n            lesson_rating: 0,\r\n        }\r\n    }\r\n    render() {\r\n\r\n        { console.log(this.state.lesson) }\r\n        return (\r\n\r\n\r\n            <form>\r\n                <div className=\"form-row\" style={{ marginTop: '50px' }}>\r\n                    <div className=\"col-md-2\"></div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label htmlFor=\"lessonName\">Lesson Name</label>\r\n                        <input className=\"form-control\" id=\"createName\" type=\"text\" name=\"lesson_name\" value={this.state.lesson.lesson_name} onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label htmlFor=\"duration\">Duration</label>\r\n                        <input className=\"form-control\" id=\"createDuration\" type=\"text\" name=\"lesson_duration\" value={this.state.lesson.lesson_duration} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"col-md-2\"></div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col-md-2\"></div>\r\n                    <div className=\"form-group col-md-8\">\r\n                        <label htmlFor=\"location\">Location</label>\r\n                        <input className=\"form-control\" id=\"createLocation\" type=\"text\" name=\"lesson_location\" value={this.state.lesson.lesson_location} onChange={this.handleChange} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col-md-2\"></div>\r\n                    <div className=\"form-group col-md-8\">\r\n                        <label htmlFor=\"neededEquip\">Needed Equipment</label>\r\n                        <input className=\"form-control\" id=\"createEquip\" type=\"text\" name=\"lesson_equip\" value={this.state.lesson.lesson_equip} onChange={this.handleChange} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col-md-2\"></div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label htmlFor=\"language\">Teaching Language</label>\r\n                        <input className=\"form-control\" id=\"createLanguage\" type=\"text\" name=\"lesson_language\" value={this.state.lesson.lesson_language} onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-2\">\r\n\r\n                        <label htmlFor=\"people\">Number of participants</label>\r\n                        <input className=\"form-control\" id=\"createAmount\" type=\"text\" name=\"lesson_amountPeople\" value={this.state.lesson.lesson_amountPeople} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group col-md-2\">\r\n                        <label htmlFor=\"price\">Price per Session</label>\r\n                        <input className=\"form-control\" id=\"createPrice\" type=\"text\" name=\"lesson_price\" value={this.state.lesson.lesson_price} onChange={this.handleChange} />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"form-row\">\r\n                    <div className=\"col-md-2\"></div>\r\n                    <div className=\"form-group col-md-8\">\r\n                        <label htmlFor=\"about\">About me</label>\r\n                        <input className=\"form-control\" id=\"createaboutTeacher\" type=\"text\" name=\"lesson_aboutTeacher\" value={this.state.lesson.lesson_aboutTeacher} onChange={this.handleChange} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col-md-2\"></div>\r\n                    <div className=\"form-group col-md-8\">\r\n                        <label htmlFor=\"about\">Picture</label>\r\n                        <input className=\"form-control\" id=\"createaboutTeacher\" type=\"text\" name=\"lesson_pictureURL\" value={this.state.lesson.lesson_pictureURL} onChange={this.handleChange} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-row\">\r\n                    <div className=\"col-md-2\"></div>\r\n                    <div className=\"form-group col-md-8\">\r\n                        <label htmlFor=\"about\">Rating</label>\r\n                        <input className=\"form-control\" id=\"createaboutTeacher\" type=\"text\" name=\"lesson_rating\" value={this.state.lesson.lesson_rating} onChange={this.handleChange} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\" style={{ marginTop: '50px' }}>\r\n                    <div className=\"col-md-5\"></div>\r\n                    <Button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleSave} >Save Lesson</Button>\r\n                </div>\r\n                <div id=\"successful\" style={{ color: 'lightgreen', textAlign: 'center', margin: '30px' }}></div>\r\n            </form>\r\n        )\r\n\r\n    }\r\n\r\n    handleChange = (event: ChangeEvent) => {\r\n        const target = event.target as HTMLInputElement\r\n        const name = target.name as string;\r\n        let newLesson = this.state.lesson;\r\n        newLesson[name] = target.value;\r\n        this.setState({\r\n            lesson: newLesson\r\n        });\r\n    }\r\n\r\n    /*this function handles the save and will be later used for the save-button.\r\n    \r\n    \r\n    \r\n    */\r\n\r\n    handleSave = (event: any) => {\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        const newLesson: ILessonData = {\r\n            _id: mongoose.Types.ObjectId().toString(),    //retrieves the ID from Mongoose\r\n            ...this.state.lesson                          // and the rest of the state\r\n        }\r\n        const action: ILessonAction = {\r\n            type: ActionType.create_lesson,\r\n            lesson: newLesson\r\n        }\r\n\r\n        axios.post('/lessons/add', newLesson)\r\n\r\n            .then(res => {\r\n                window.CS.clientAction(action);\r\n                console.log(res.data._id, res.data)\r\n            });\r\n        let success = document.getElementById(\"successful\")!\r\n        success.innerText = \"The creation of the lesson was successful and your students can now reach you. Happy teaching!\";\r\n        event.preventDefault();\r\n\r\n\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { IWindow } from '../framework/IWindow';\r\n\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport axios from 'axios';\r\nimport history from '../framework/history';\r\n\r\nexport interface ISearchResultAction extends IAction {\r\n    data: Object;\r\n}\r\n\r\n\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n    location: any,\r\n    history: any,\r\n    match: any\r\n}\r\n\r\ninterface IState {\r\n    email: string;\r\n    subject: string;\r\n    message: string;\r\n}\r\n\r\nexport default class LessonDetail extends React.Component<IProps, IState>  {\r\n    constructor(props: any) {\r\n        super(props)\r\n        let lesson = window.CS.getBMState().searchResult.filter((item: any) => this.props.match.params.id === item._id)\r\n        this.state = {\r\n            email: lesson[0] ? lesson[0].lesson_eMailTeacher : \"\",\r\n            subject: lesson[0] ? `${lesson[0].lesson_name} in ${lesson[0].lesson_location}` : \"\",\r\n            message: \"Hi, I would like to attend your lesson\"\r\n        }\r\n    }\r\n    \r\n    handleQuery = () => {\r\n        history.push('/searchresult');\r\n    }\r\n    emailHandler = (e: any) => {\r\n        e.preventDefault();\r\n        axios.post('/lessons/email', this.state)\r\n    }\r\n    changeHandler = (e:any) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        } as IState)\r\n    }\r\n    render() {\r\n        const lessonToRender = window.CS.getBMState().searchResult.filter((item: any) => this.props.match.params.id === item._id);\r\n        return (\r\n            <div>\r\n                {lessonToRender.length != 0 ? <><h1>{lessonToRender[0].lesson_name}</h1>\r\n                    <p>Location: {lessonToRender[0].lesson_location}</p>\r\n                    <p>Price per Session: {lessonToRender[0].lesson_price} EUR</p>\r\n                    <p>Duration: {lessonToRender[0].lesson_duration} min</p>\r\n                    <p>Needed Equipment: {lessonToRender[0].lesson_equip}</p>\r\n                    <p>Teaching Language: {lessonToRender[0].lesson_language}</p>\r\n                    <p>Number of participants: {lessonToRender[0].lesson_amountPeople}</p>\r\n                    <p>About me: {lessonToRender[0].lesson_abaoutTeacher}</p>\r\n                    <p>Send email to: {lessonToRender[0].lesson_eMailTeacher}</p>\r\n                    <form onSubmit={(e) => this.emailHandler(e)}>\r\n                        <input type=\"text\" name=\"subject\" value = {this.state.subject} onChange={this.changeHandler}/>\r\n                        <textarea name=\"message\" value = {this.state.message} onChange={this.changeHandler}/>\r\n                        <button type=\"submit\">Send</button>\r\n                    </form>\r\n                    <div className=\" col-md-4 col-xs-4\" >\r\n                        <button className=\"btn btn-primary\" onClick={this.handleQuery}>Back</button>\r\n                    </div>\r\n                </>\r\n                    : <h1>Please return to search and try again</h1>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component, ChangeEvent } from 'react'\r\nimport { Button } from 'react-bootstrap';\r\nimport mongoose from 'mongoose';\r\nimport { IAction, ActionType } from '../framework/IAction';\r\nimport { ILessonData, IState, IUser } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport history from '../framework/history';\r\nimport { IWindow } from '../framework/IWindow'\r\n\r\ndeclare let window: IWindow;\r\ninterface IProps {\r\n  edit: boolean;\r\n}\r\n\r\ninterface IJSXState {\r\n  edit_mode: boolean;\r\n  username: string;\r\n  lastname: string;\r\n  firstname: string;\r\n  password: string;\r\n}\r\ninterface IUserAction extends IAction {\r\n  user: IUser\r\n}\r\n\r\nexport default class EditProfile extends React.PureComponent<IProps, IJSXState> {\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      edit_mode: false,\r\n      username: '',\r\n      firstname: \"0\",\r\n      lastname: '',\r\n      password: \"0\",\r\n    }\r\n    this.handleSwitchToEditMode = this.handleSwitchToEditMode.bind(this)\r\n    this.handleLogout = this.handleLogout.bind(this)\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      edit_mode: props.edit,\r\n      username: window.CS.getBMState().user.username,\r\n      password: window.CS.getBMState().user.password,\r\n      lastname: window.CS.getBMState().user.lastname,\r\n      firstname: window.CS.getBMState().user.firstname,\r\n    }\r\n  }\r\n  renderEditMode() {\r\n    return (\r\n      <div>\r\n        <div>\r\n        <form>\r\n          <div className=\"row\" style={{ marginTop: '50px' }} >\r\n            <div className=\"col-md-2\"></div>\r\n            <div className=\"col-md-3 bg-light\">\r\n              <div className=\"col\">\r\n                <label htmlFor=\"firstName\">First Name:</label>\r\n                <input className=\"form-control\" name=\"firstname\" onChange={this.handleChange} value={this.state.firstname}></input>\r\n              </div>\r\n\r\n              <div className=\"col\">\r\n                <label htmlFor=\"lastName\">Last Name:</label>\r\n                <input className=\"form-control\" name=\"lastname\" onChange={this.handleChange} value={this.state.lastname}></input>\r\n              </div>\r\n\r\n              <div className=\"col\">\r\n                <label htmlFor=\"username\">Username:</label>\r\n                <input className=\"form-control\" name=\"username\" onChange={this.handleChange} value={this.state.username}></input>\r\n              </div>\r\n              \r\n              <div className=\"col\">\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input className=\"form-control\" name=\"password\" onChange={this.handleChange} value=\"****\"></input>\r\n                <p> &nbsp;</p>\r\n              </div>\r\n            \r\n            <div className=\"col-md-2\"></div>\r\n          </div>\r\n          </div>\r\n          \r\n          <div className=\"col-md-7\">\r\n            <div className=\"d-flex justify-content-center\" style={{ marginBottom: '5px' }}>\r\n              <Button type=\"submit\" onClick={this.saveProfile} style={{ marginTop: '5px' }} >Save</Button>\r\n              </div>\r\n          </div>\r\n        </form> \r\n\r\n        </div>\r\n          </div>\r\n    )\r\n  }\r\n\r\n\r\n  renderViewMode() {\r\n    return (\r\n      <div>\r\n <div className=\"row d-flex justify-content-start\" style={{ marginTop: '50px' }} >\r\n  <div className=\"col-md-2\"></div>\r\n  <div className=\"col-md-2 bg-light\">\r\n\r\n      <div className=\"Edit\">\r\n      <div className=\"col\">\r\n          <p>Username: {window.CS.getBMState().user.username}</p>\r\n      </div>\r\n\r\n        <div className=\"Edit\">\r\n        <div className=\"col\">\r\n          <p>First Name: {window.CS.getBMState().user.firstname}</p>\r\n        </div>\r\n\r\n        <div className=\"Edit\">\r\n        <div className=\"col\">\r\n          <p>Last Name: {window.CS.getBMState().user.lastname}</p>\r\n        </div>\r\n\r\n        <div className=\"Edit\">\r\n        <div className=\"col\">\r\n          <p>Password: ************</p>\r\n        </div>\r\n\r\n        <div className=\"Edit\">\r\n        <div className=\"col\">\r\n          <p>Picture: </p>\r\n          </div>\r\n          </div>\r\n          </div>\r\n          </div></div></div></div>\r\n          </div>\r\n        <div className=\"row d-flex justify-content-start\" style={{ marginTop: '10px' }}>\r\n        <div className=\"col-md-2\"></div>\r\n        <button className=\"btn btn-primary\" onClick={this.handleSwitchToEditMode}>Edit</button>\r\n        \r\n        <div className=\"row\">\r\n        <div className=\"col-md-2\"></div>\r\n        <button className=\"btn btn-primary\" onClick={this.handleLogout}>Logout</button>\r\n        \r\n     \r\n \r\n    </div>\r\n        \r\n  </div>\r\n  </div>\r\n    )\r\n  }\r\n  render() {\r\n    //|| true  weg nach fake\r\n    console.log(window.CS.getUIState().loggedIn)\r\n    if (window.CS.getUIState().loggedIn) {\r\n      //|| !=true  weg nach fake und == true\r\n      if (this.state.edit_mode == true) return this.renderEditMode();\r\n      else return this.renderViewMode();\r\n    }\r\n\r\n    else {\r\n      return (\r\n        <div>\r\n          You are not logged in. Please login first, before you change your profile.\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  handleLogout() {\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(uiAction);\r\n    axios.get('/auth/logout').then(res => {\r\n      const loggedoutAction: IAction = {\r\n        type: ActionType.user_logged_out\r\n      }\r\n      window.CS.clientAction(loggedoutAction);\r\n    }\r\n\r\n    );\r\n    history.push('/')\r\n  }\r\n\r\n  handleSwitchToEditMode() {\r\n    this.setState({ edit_mode: true });\r\n  }\r\n\r\n\r\n  handleChange = (event: any) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    } as IJSXState);\r\n  }\r\n\r\n\r\n  saveProfile = (event: any) => {\r\n    event.preventDefault();\r\n    const aiAction: IAction = {\r\n      type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(aiAction);\r\n    let user = JSON.parse(JSON.stringify(window.CS.getBMState().user))\r\n    user.username = this.state.username;\r\n    user.lastname = this.state.lastname;\r\n    user.firstname = this.state.firstname;\r\n\r\n    axios.put('/auth/user/update', user)\r\n      .then(res => {\r\n        console.log(res.data)\r\n        const uiAction: IUserAction = {\r\n          type: ActionType.user_updated,\r\n          user: res.data\r\n        }\r\n        history.push('/');\r\n        window.CS.clientAction(uiAction);\r\n\r\n        console.log(res.data)\r\n      });\r\n  }\r\n\r\n}\r\n\r\n//\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport NavBar from './components/NavBar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ShowLessons from './components/ShowLesson';\r\nimport SearchBar from './components/SearchBar';\r\nimport SearchResult from './components/SearchResult';\r\nimport CreateLesson from './components/CreateLesson';\r\nimport LessonDetail from './components/LessonDetail';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { IAction, ActionType } from './framework/IAction';\r\nimport { ILessonData, IState } from './state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from './reducer/appReducer';\r\nimport EditProfile from './components/EditProfile';\r\n\r\nimport { IWindow } from './framework/IWindow'\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n  stateCounter: number\r\n}\r\n\r\nexport interface ILessonsLoadedAction extends IAction {\r\n  lessons: ILessonData[]\r\n}\r\nreducerFunctions[ActionType.server_called] = function (newState: IState, action: IAction) {\r\n  newState.UI.waitingForResponse = true;\r\n  return newState;\r\n}\r\nreducerFunctions[ActionType.add_lessons_from_server] = function (newState: IState, action: ILessonsLoadedAction) {\r\n  newState.UI.waitingForResponse = false;\r\n  newState.BM.lessons = action.lessons;\r\n  return newState;\r\n}\r\nexport default class App extends React.PureComponent<IProps, IState> {\r\n  componentDidMount() {\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(uiAction);\r\n    axios.get('/lessons/read').then(response => {\r\n      console.log(\"this data was loaded as a result of componentDidMount:\");\r\n      console.log(response.data);\r\n      const responseAction: ILessonsLoadedAction = {\r\n        type: ActionType.add_lessons_from_server,\r\n        lessons: response.data as ILessonData[]\r\n      }\r\n      window.CS.clientAction(responseAction);\r\n    }).catch(function (error) { console.log(error); })\r\n  }\r\n\r\n  handleQuery = (searchQuery: string) => {\r\n    axios.post('/lessons/search', searchQuery).then(response => {\r\n      console.log(response.data);\r\n    });\r\n  }\r\n  //component={LessonDetail}\r\n  render() {\r\n    window.CS.log(\"App --> render()\")\r\n    return (\r\n      <div>\r\n        <NavBar />\r\n        <div>\r\n          <Switch >\r\n            <Route path=\"/showlessons\" component={ShowLessons} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route path=\"/createlesson\" component={CreateLesson} />\r\n            <Route path=\"/searchResult\" component={SearchResult} />\r\n            <Route path=\"/LessonDetail/read/:id\" render={(props) => <LessonDetail {...props} />} />\r\n            <Route path=\"/editprofile\" component={EditProfile} edit={false} />\r\n            <Route path=\"/\" component={SearchBar} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n} \r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve lessons; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { reducer } from '../reducer/appReducer'\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport { IUI, IBM } from '../state/appState';\r\nimport { IWindow } from './IWindow'\r\nimport { IAction } from './IAction';\r\ndeclare let window: IWindow;\r\n\r\n//Dev tools are needed so we can see the state in the browser\r\n//Redux thunk is needed for actions that make a rest call in order to create another action, when the server responds\r\nlet reduxMiddleware: any;\r\nif (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    reduxMiddleware = compose(\r\n        applyMiddleware(ReduxThunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n} else { reduxMiddleware = applyMiddleware(ReduxThunk); }\r\n\r\n\r\nexport class CS {\r\n    private store: any;\r\n    public log(message: string) {\r\n    }\r\n    public getStore(){\r\n        return this.store;\r\n    }\r\n    public getState() {\r\n        return this.store.getState();\r\n    }\r\n    public getUIState() {\r\n        return this.getState().UI as IUI;\r\n    }\r\n    public getBMState() {\r\n        return this.getState().BM as IBM;\r\n    }\r\n    public initializeStore() {\r\n        this.store = createStore(\r\n            reducer,\r\n            reduxMiddleware\r\n        );\r\n    }\r\n   //changed this to any because of the thunk returning a function ...\r\n   public clientAction(action:IAction | Function){\r\n    this.store.dispatch(action);\r\n    }\r\n    public getDBServerURL_test(){\r\n        //return \"https://patricks-boilerplate.herokuapp.com/\";\r\n        return \"http://localhost:8080\";\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport history from './framework/history';\r\n//import framework components\r\n//CS: ClientServices, we will use them a lot, so to shorten the code they are just called: CS\r\nimport { CS } from './framework/CS';\r\n//we will add a CS instance to the window object.\r\n//We also want the window object strictly typed, so we declare that window has the type \"IWindow\"\r\nimport { IWindow } from './framework/IWindow'\r\ndeclare let window: IWindow;\r\nwindow.CS = new CS();\r\n//we create the inital Application State macht store \r\nwindow.CS.initializeStore();\r\n\r\n//now we can render this state to the DOM using React\r\nReactDOM.render(\r\n  <Router history={history}>\r\n  <App stateCounter={window.CS.getUIState().counter} />\r\n  </Router>\r\n, document.getElementById('root'));\r\n\r\n\r\n//whenever there is a new state, we render the whole virtual DOM again\r\n//React will take care that only the differences from the previous and\r\n//the current virtual DOM will be rendered to the browser DOM\r\nwindow.CS.getStore().subscribe(() => {\r\n  window.CS.log(\"3. before render ---------------------------------------------\");\r\n  ReactDOM.render(<Router history={history}>\r\n                  <App stateCounter={window.CS.getUIState().counter} />\r\n                  </Router>, document.getElementById('root'));\r\n  window.CS.log(\"3. after render ---------------------------------------------\");\r\n});\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}